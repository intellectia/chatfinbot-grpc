syntax = "proto3";

package chatfinbot.user.v1;

option go_package = ".;userpb";

service UserService {
  rpc Register(UserRequest) returns (RegisterResponse);
  rpc LoginWithEmail(LoginWithEmailRequest) returns (LoginWithEmailResponse); // email login
  rpc LoginWithPhone(LoginWithPhoneRequest) returns (LoginResponse); // phone login
  rpc LoginWithUserName(LoginWithUserNameRequest) returns (LoginResponse); // user_name login
  rpc SendSMSCode(SendSMSCodeRequest) returns (Empty);
  rpc GetUser(GetUserRequest) returns (UserResponse);
  rpc SetInitPassword(SetInitPasswordRequest) returns (Empty); // set original password
  rpc InitUserExtraInfo(InitUserExtraInfoRequest) returns (InitUserExtraInfoResponse);
  rpc BindPhone(BindPhoneRequest) returns (LoginResponse);
  rpc WeChatLogin(WeChatLoginRequest) returns (LoginResponse);
}

message UserRequest {
  string email = 1;
  string password = 2;
  string user_name = 3;
}

message RegisterResponse {
  string id = 1;
  string user_name = 2;
}

message LoginWithEmailRequest {
  string email = 1;
  string password = 2;
}

message LoginWithEmailResponse {
  string id = 1;
  string token = 2;
}

message LoginWithPhoneRequest {
  string phone = 1;
  string country_code = 2;
  string code = 3;
}

message LoginWithUserNameRequest {
  string user_name = 1;
  string password = 2;
}


message GetUserRequest {
  string id = 1;
}

message UserResponse {
  string id = 2;
  string email = 3;
  string user_name = 4;
}

message Empty {}

message SendSMSCodeRequest {
    string phone_number = 1; // 手机号 8613211112222
    int32 message_type = 2; // 1: 验证码
}

message InitUserExtraInfoRequest {
  string user_id = 1;           // user ID to specify which user to update
  string company_name = 2;     
  string real_name = 3;        
  string job = 4;
  string temp_token = 5; // 临时token，用于额外信息            
}

message InitUserExtraInfoResponse {
  string user_id = 1;           // user ID to specify which user to update 
  string token = 2;             // 登录token        
}

message SetInitPasswordRequest {
  string user_id = 1;           // user ID to specify which user's password to reset
  string password = 2;     // the new password user wants to set
  string temp_token = 5; // 临时token，用于设置密码
}

// BindPhoneRequest defines the request format for BindPhone rpc method
message BindPhoneRequest {
    string provider_user_app_id = 1;    // OAuth User App ID to bind to the user
    string phone_number = 2;         // Phone number of the user
    string code = 3;                 // Verification code (possibly SMS) received on the phone
    string country_code = 4;         // Country code of the phone number
}

// WeChatLoginRequest defines the request format for WeChatLogin rpc method
message WeChatLoginRequest {
    string code = 1; // WeChat code for authentication
}

// WeChatLoginResponse defines the response format for WeChatLogin rpc method
message WeChatLoginResponse {
    string provider_user_app_id = 1; // Identifier from OAuth provider (e.g., WeChat)
    string user_id = 2;              // User ID
    string user_name = 3;            // User name
    string token = 4;                // Authentication token for the user
    bool has_password = 5; // 是否有密码
    string company_name = 6; // 公司名称
    bool is_first_login = 7; // 是否第一次登录
    string login_type = 8; // 用户类型
}

message LoginResponse {
  string user_id = 1;
  string token = 2; // 登录token, 如果没有设置密码或者没有公司名，返回空
  string user_name = 3; // 手机注册时，手机号为用户名
  bool has_password = 4; // 是否有密码
  string company_name = 5; // 公司名称
  bool is_first_login = 6; // 是否第一次登录
  string temp_token = 7; // 临时token，用于初始化
  string provider_user_app_id = 8; // Identifier from OAuth provider (e.g., WeChat)
  string login_type = 9; // phone, email, wechat, username
}
