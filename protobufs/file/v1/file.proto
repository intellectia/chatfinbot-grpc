syntax = "proto3";

package chatfinbot.file.v1;

option go_package = ".;filepb";

service FileService {
  rpc UploadFile(UploadRequest) returns (UploadResponse);
  rpc UploadPublicFile(UploadRequest) returns (UploadResponse);
  rpc DeleteFile(DeleteFileRequest) returns (Empty);
  rpc UpdateFile(UpdateFileRequest) returns (Empty);
  rpc UploadTinyAudioFile(UploadTinyAudioFileRequest) returns (UploadTinyAudioFileResponse);
  rpc GetFileList(GetFileListRequest) returns (GetFileListResponse);
  rpc GetFileInfo(GetFileInfoRequest) returns (GetFileInfoResponse);
  rpc GetPublicS3DownloadURL(GetPublicS3DownloadURLRequest) returns (GetS3DownloadURLResponse);
  rpc GetPrivateS3DownloadURL(GetPrivateS3DownloadURLRequest) returns (GetS3DownloadURLResponse);
  rpc GetPrivateS3DownloadURLInner(GetPrivateS3DownloadURLRequest) returns (GetS3DownloadURLResponse);
  rpc GetS3DownloadURL(GetS3DownloadURLReq) returns (GetS3DownloadURLRsp);
  rpc GetFileDownloadURL(GetFileDownloadURLRequest) returns (GetFileDownloadURLResponse);
}

message DeleteFileRequest {
    string doc_id = 1;  // or filename, based on how you identify a unique file
}

message UpdateFileRequest {
    string doc_id = 1;          // Unique identifier for the file you want to update
    string file_name = 2;   // New filename (optional, if you want to allow renaming)
}

message UploadRequest {
  bytes file_content = 1;
  string file_name = 2;
  string bucket_name = 3;
  string doc_id = 4;
}

message GetFileListRequest {}

message UploadResponse {
  string hash_value = 1;
  string s3_path = 2;
  string file_name = 3;
  string doc_id = 4;
  string file_type = 5;
  int64  created_at = 6;
  int64  updated_at = 7;
  string bucket_name = 8;
  string s3_download_url = 9;
}

message Empty {}

message FileListItem {
  string doc_id = 1;
  string file_name = 2;
  string hash_value = 3;
  string s3_path = 4;
  string file_type = 5;
  int64  created_at = 6;
  int64  updated_at = 7;
  bool   is_collected = 8;
  int64  collection_id = 9;
}

message GetFileListResponse {
  repeated FileListItem files = 1;  // A list of files
}

// Added these
message GetFileInfoRequest {
  string doc_id = 1;  // Unique identifier for the file you want info on
}

message GetFileInfoResponse {
  string doc_id = 1;
  string file_name = 2;
  string hash_value = 3;
  string s3_download_url = 4;
  string file_type = 5;
  int64  created_at = 6;
  int64  updated_at = 7;
}

message GetPublicS3DownloadURLRequest {
    repeated string s3_paths = 1;      // The S3 path of the file.
}

message GetPrivateS3DownloadURLRequest {
    repeated string doc_ids = 1;      // The S3 path of the file.
}


message GetS3DownloadURLResponse {
    repeated string download_urls = 1;  // List of download URLs.
}

message GetS3DownloadURLReq {
    repeated S3Documents documents = 1;
}

message S3Documents {
    string doc_id = 1;
    string s3_path = 2;
}

message GetS3DownloadURLRsp {
    map<string, string> documents = 1;  //
}

message UploadTinyAudioFileRequest {
    bytes file_content = 1;
    string start = 2;
    int64 seg_id = 3;
    int32 duration = 4; 
}

message UploadTinyAudioFileResponse {
    int32 ret = 1;
    string msg = 2;
    UploadTinyAudioFileData data = 3;
} 

message UploadTinyAudioFileData {
    string start = 1;
    string text = 2;
    double duration = 3;
    string role = 4;
    int64 seg_id = 5;
}

enum FileDownloadStatus {
    UNKNOWN = 0;          // Default value, used when the status is not set or unknown
    SUCCESS = 1;          // Indicates that the file URL was successfully retrieved
    NOT_FOUND = 2;        // Indicates that the file was not found
    UNAUTHORIZED = 3;     // Indicates a lack of permission to access the file
    FAILED = 4;           // General failure, when specific error category is not applicable
    // Add more statuses as needed
}

message GetFileDownloadURLResponse {
    repeated FileDownloadURLItem download_urls = 1;
}

message FileDownloadURLItem {
    string download_url = 1;              // The URL for downloading the file
    FileDownloadStatus status = 2;        // Status of the request
    string s3_path = 3;  // S3 path for public files
    string doc_id = 4;   // Document ID for private files
}

message GetFileDownloadURLRequest {
    repeated FileIdentifier file_identifiers = 1;
}

message FileIdentifier {
    string s3_path = 1;  // S3 path for public files
    string doc_id = 2;   // Document ID for private files
}


