syntax = "proto3";

package chatfinbot.payment.v1;

option go_package = ".;paymentpb";

import "google/api/annotations.proto";

message Order {
    string order_id = 1;
    string user_id = 2;
    string item_id = 3;
    float total_amount = 4;  // Remember to handle decimals in a suitable manner for protobuf.
    string currency = 5;
    string order_status = 6; // Pending, Completed, Failed, Refunded, etc.
    int64 created_at = 7;
    int64 updated_at = 8;
    string payment_method = 9; // Wechat, Alipay, Paypal.
}

service PaymentsService {
    rpc CreateOrder(CreateOrderRequest) returns (OrderResponse) {
        option (google.api.http) = {
            post: "/orders"
            body: "order_data"
        };
    };
    
    rpc ListOrders(ListOrdersRequest) returns (ListOrdersResponse) {
        option (google.api.http) = {
            get: "/orders"
        };
    };
    
    rpc GetOrderStatus(GetOrderStatusRequest) returns (GetOrderStatusResponse) {
        option (google.api.http) = {
            get: "/orders/{order_id}/status"
        };
    };

    rpc GetPlanDetail(GetPlanDetailRequest) returns (GetPlanDetailResponse) {
        option (google.api.http) = {
            get: "/plan-details"
        };
    };
    
    rpc GetUserUsagePermissions(GetUserUsagePermissionsRequest) returns (GetUserUsagePermissionsResponse) {
        option (google.api.http) = {
            get: "/usage-details"
        };
    };
}

enum PlanId {
    Free = 0;  // default value, 免费版
    Premium = 1; // 个人付费版
    Enterprise = 2; // 企业付费版
}

message GetPlanDetailRequest {
    PlanId plan_id = 1;
}

message GetPlanDetailResponse {
    PermConfig perm_config = 1;
}

message GetUserUsagePermissionsRequest {
    string user_id = 1;
}

message GetUserUsagePermissionsResponse {
    PermConfig perm_config = 1;
}

enum PermConfigMode {
    PermConfigModeUnknown = 0; // 未知（不要使用）
    PermConfigModeDay = 1; // 按天计费
    PermConfigModeMonth = 2; // 按月计费
}

message PermConfig {
    ChatPermConfig chat_config = 1;
    WritingPermConfig writing_config = 2;
    MediaPermConfig media_config = 3;
}

message ChatPermConfig {
    PermConfigMode mode = 1; // 模式
    uint32 answer_num = 2; // 回答数量
    string upload_format = 3; // 上传文件格式 多个英语逗号分隔 doc,pdf,docx,md,txt
    bool ocr = 4; // 是否能ocr
    uint32 ocr_num = 5; // ocr次数， 0=未限制
    uint32 file_num = 6; // 文件数量
    uint32 page_size = 7; // 每个文件限制页数
    uint32 file_size = 8; // 文件大小
    bool graph = 9; // 图表生成
    uint32 graph_num = 10; // 图表生成次数 0=未限制
    bool multi_doc = 11;  // 多文档分析
    uint32 multi_doc_num = 12;  // 多文档分析此时 0=不限制 
}

message WritingPermConfig {
    PermConfigMode mode = 1; // 模式
    uint32 output_token = 2; // 输出文字数量
    uint32 intput_file_num = 3; // 输入文件数量
    uint32 intput_page_size =4; // 输入文件数量页数
    bool edit = 5; // 是否能编辑
    bool graph = 6; // 图表生成
    uint32 graph_num = 7; // 图表生成次数 0=未限制
    string export_format = 8; // 导出格式
    bool custom_color = 9; // 自定义配色
}

message MediaPermConfig {
    uint32 audio_time = 1; // 音频时长
    uint32 video_time = 2; // 视频时长
    uint32 live_meeting_time = 3; // 实时转录时长
    uint32 deep_summary = 4; // 深度总结
}


// Messages for CreateOrder
message CreateOrderRequest {
    Order order_data = 1;
}

message OrderResponse {
    Order order_data = 1;
    string status = 2;
    string message = 3;
}

// Messages for ListOrders
message ListOrdersRequest {
    int32 page = 1;
    int32 limit = 2;
    string sort_by = 3;
    bool descending = 4;
}

message ListOrdersResponse {
    repeated Order orders = 1;
    int32 total_records = 2;
    string status = 3;
    string message = 4;
}

// Messages for GetOrderStatus
message GetOrderStatusRequest {
    string order_id = 1;
}

message GetOrderStatusResponse {
    string order_status = 1;
    string status = 2;  // General status for the response (e.g., success, failure).
    string message = 3;  // Optional message providing more details.
}
