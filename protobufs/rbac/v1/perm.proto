syntax = "proto3";

package chatfinbot.rbac.v1;

option go_package = ".;rbacpb";
import "google/api/annotations.proto";

service RbacService {
    rpc CheckChatPerm(CheckChatPermReq) returns (CheckChatPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkchatperm",
			body: "*"
		};
    };
    rpc CheckWritingPerm(CheckWritingPermReq) returns (CheckWritingPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkwritingperm",
			body: "*"
		};
    };
    rpc CheckMediaPerm(CheckMediaPermReq) returns (CheckMediaPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkmediaperm",
			body: "*"
		};
    };
    rpc CheckChatPermInner(CheckChatPermReq) returns (CheckChatPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkchatperm-inner",
			body: "*"
		};
    };
    rpc CheckWritingPermInner(CheckWritingPermReq) returns (CheckWritingPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkwritingperm-inner",
			body: "*"
		};
    };
    rpc CheckMediaPermInner(CheckMediaPermReq) returns (CheckMediaPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/checkmediaperm-inner",
			body: "*"
		};
    };
    rpc SetChatPerm(SetChatPermReq) returns (SetChatPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/setchatperm",
			body: "*"
		};
    };
    rpc SetWritingPerm(SetWritingPermReq) returns (SetWritingPermRsp)  {
        option (google.api.http) = {
			post: "/v1/rbac/setwritingperm",
			body: "*"
		};
    };
    rpc SetMediaPerm(SetMediaPermReq) returns (SetMediaPermRsp)  {
        option (google.api.http) = {
			post: "/v1/rbac/setmediaperm",
			body: "*"
		};
    };
    rpc SetChatPermInner(SetChatPermReq) returns (SetChatPermRsp)  {
        option (google.api.http) = {
			post: "/v1/rbac/setchatperm-inner",
			body: "*"
		};
    };
    rpc SetWritingPermInner(SetWritingPermReq) returns (SetWritingPermRsp) {
        option (google.api.http) = {
			post: "/v1/rbac/setwritingperm-inner",
			body: "*"
		};
    };
    rpc SetMediaPermInner(SetMediaPermReq) returns (SetMediaPermRsp)  {
        option (google.api.http) = {
			post: "/v1/rbac/setmediaperm-inner",
			body: "*"
		};
    };
}

enum ChatType {
    ChatTypeUnknown = 0; // 未知（不要使用）
    ChatTypeChat = 1; // 问答
    ChatTypeWriting = 2; // 写作
    ChatTypeMedia = 3; // 音视频
}

enum ChatOpt {
    ChatOptUnknown = 0; // 未知（不要使用）
    ChatOptAnswerNum = 1; // 聊天问答数量
    ChatOptUploadFormat = 2; // 上传文件格式
    ChatOptOCR = 3; // ocr
    ChatOptFileNum = 4; // 文件数量
    ChatOptPageSize = 5; // 文件页数
    ChatOptFileSize = 6; // 文件大小
    ChatOptGraph = 7; // 图表生成
    ChatOptMultiDoc = 8;  //多文档分析
}

enum WritingOpt {
    WritingOptUnknown = 0; // 未知（不要使用）
    WritingOptOutputToken = 1; // 输出文字数量
    WritingOptInputFileNum = 2; // 输入文件数量及页数
    WritingOptInputPageSize = 3; // 输入文件数量及页数
    WritingOptEdit = 4; // 写作编辑
    WritingOptGraph = 5; // 图表生成
    WritingOptExport = 6; // 导出格式
    WritingOptGraphNum = 7; // 图表数量
    WritingOptCustomColor = 8; // 自定义配色方案
}

enum MediaOpt {
    MediaOptUnknown = 0; // 未知（不要使用）
    MediaOptAudio = 1; // 输出音频
    MediaOptVideo = 2; // 视频
}

enum PermConfigMode {
    PermConfigModeUnknown = 0; // 未知（不要使用）
    PermConfigModeDay = 1; // 按天计费
    PermConfigModeMonth = 2; // 按月计费
}

message CheckChatPermReq {
    string user_id = 1; // 用户id
    repeated ChatPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message ChatPermItem {
    ChatOpt opt = 1; // 选项
    string upload_format = 2; // 上传文件格式 只有在opt=ChatOptUploadFormat生效
    uint32 ocr_num = 3; // OCR数量     只有在opt=ChatOptOCR生效
    uint32 file_num = 4; // 文件数量    只有在opt=ChatOptFileNum  生效
    uint32 page_size = 5; // 文件页数   只有在opt=ChatOptPageSize  生效
    uint32 file_size = 6; // 文件大小 有在opt=ChatOptFileSize  生效
}

message PermData {
    string title = 1; // 标题
    string config = 2;  // 格式
    bool perm = 3; // 权限
    int32 limit = 4; // 限制
}

message CheckChatPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
    repeated PermData list = 3; // 数据
}

message CheckWritingPermReq {
    string user_id = 1; // 用户id
    repeated WritingPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message WritingPermItem {
    WritingOpt opt = 1; // 选项
    int32 intput_file_num = 2; // 输入文件数量
    int32 intput_page_size = 3; // 输入文件页数
    string export_format = 4; // 导出格式
    int32 graph_num = 5; // 图表数量
}

message CheckWritingPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
    repeated PermData list = 3; // 数据
}

message CheckMediaPermReq {
    string user_id = 1; // 用户id
    repeated MediaPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message MediaPermItem {
    MediaOpt opt = 1; // 选项
    double duration = 2; // 花费的时长 
}

message CheckMediaPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
    repeated PermData list = 3; // 数据
}

message SetChatPermReq {
    string user_id = 1; // 用户id
    repeated SetChatPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message SetChatPermItem {
    ChatOpt opt = 1; // 选项
    uint32 ocr_num = 2; // OCR数量     只有在opt=ChatOptOCR生效
    uint32 file_num = 3; // 文件数量    只有在opt=ChatOptFileNum  生效
}

message SetChatPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
}

message SetWritingPermReq {
    string user_id = 1; // 用户id
    repeated SetWritingPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message SetWritingPermItem {
    WritingOpt opt = 1; // 选项
    int32 intput_file_num = 2; // 输入文件数量
    int32 graph_num = 3; // 图表数量
}

message SetWritingPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
}

message SetMediaPermReq {
    string user_id = 1; // 用户id
    repeated SetMediaPermItem list = 2;
    int64 ts = 3; // 时间  外部接口才有效
    string nonce = 4; // 随机数  外部接口才有效
    string access_token = 5; // token 外部接口才有效
}

message SetMediaPermItem {
    MediaOpt opt = 1; // 选项
    double duration = 2; // 花费的时长 
}

message SetMediaPermRsp {
    int32 ret = 1; // 错误码
    string msg = 2; // msg
}

message PermConfig {
    ChatPermConfig chat_config = 1;
    WritingPermConfig writing_config = 2;
    MediaPermConfig media_config = 3;
}

message ChatPermConfig {
    PermConfigMode mode = 1; // 模式
    uint32 answer_num = 2; // 回答数量
    string upload_format = 3; // 上传文件格式 多个英语逗号分隔 doc,PDF,docx,md,txt
    bool ocr = 4; // 是否能ocr
    uint32 oc_num = 5; // ocr次数， 0=未限制
    uint32 file_num = 6; // 文件数量
    uint32 page_size = 7; // 每个文件限制页数
    uint32 file_size = 8; // 文件大小
    bool graph = 9; // 图表生成
    uint32 graph_num = 10; // 图表生成次数 0=未限制
    bool multi_doc = 11;  // 多文档分析
    uint32 multi_doc_num = 12;  // 多文档分析此时 0=不限制 
}

message WritingPermConfig {
    PermConfigMode mode = 1; // 模式
    uint32 output_token = 2; // 输出文字数量
    uint32 intput_file_num = 3; // 输入文件数量
    uint32 intput_page_size =4; // 输入文件数量页数
    bool edit = 5; // 是否能编辑
    bool graph = 6; // 图表生成
    uint32 graph_num = 7; // 图表生成次数 0=未限制
    string export_format = 8; // 导出格式
    bool custom_color = 9; // 自定义配色
}

message MediaPermConfig {
    uint32 free_audio_time = 1; // 免费音频时长
    uint32 free_video_time = 2; // 免费视频时长
}