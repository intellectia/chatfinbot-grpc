// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: community.proto

package communitypb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type MarketSentiment int32

const (
	MarketSentiment_MarketSentimentUnknown MarketSentiment = 0
	MarketSentiment_MarketSentimentBullish MarketSentiment = 1 // 看涨
	MarketSentiment_MarketSentimentBearish MarketSentiment = 2 // 看跌
	MarketSentiment_MarketSentimentNeutral MarketSentiment = 3 // 中立
)

// Enum value maps for MarketSentiment.
var (
	MarketSentiment_name = map[int32]string{
		0: "MarketSentimentUnknown",
		1: "MarketSentimentBullish",
		2: "MarketSentimentBearish",
		3: "MarketSentimentNeutral",
	}
	MarketSentiment_value = map[string]int32{
		"MarketSentimentUnknown": 0,
		"MarketSentimentBullish": 1,
		"MarketSentimentBearish": 2,
		"MarketSentimentNeutral": 3,
	}
)

func (x MarketSentiment) Enum() *MarketSentiment {
	p := new(MarketSentiment)
	*p = x
	return p
}

func (x MarketSentiment) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (MarketSentiment) Descriptor() protoreflect.EnumDescriptor {
	return file_community_proto_enumTypes[0].Descriptor()
}

func (MarketSentiment) Type() protoreflect.EnumType {
	return &file_community_proto_enumTypes[0]
}

func (x MarketSentiment) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use MarketSentiment.Descriptor instead.
func (MarketSentiment) EnumDescriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{0}
}

type PostQueueType int32

const (
	PostQueueType_PostQueueTypeUnknown PostQueueType = 0
	PostQueueType_PostQueueTypeAdd     PostQueueType = 1
	PostQueueType_PostQueueTypeDel     PostQueueType = 2
)

// Enum value maps for PostQueueType.
var (
	PostQueueType_name = map[int32]string{
		0: "PostQueueTypeUnknown",
		1: "PostQueueTypeAdd",
		2: "PostQueueTypeDel",
	}
	PostQueueType_value = map[string]int32{
		"PostQueueTypeUnknown": 0,
		"PostQueueTypeAdd":     1,
		"PostQueueTypeDel":     2,
	}
)

func (x PostQueueType) Enum() *PostQueueType {
	p := new(PostQueueType)
	*p = x
	return p
}

func (x PostQueueType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostQueueType) Descriptor() protoreflect.EnumDescriptor {
	return file_community_proto_enumTypes[1].Descriptor()
}

func (PostQueueType) Type() protoreflect.EnumType {
	return &file_community_proto_enumTypes[1]
}

func (x PostQueueType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostQueueType.Descriptor instead.
func (PostQueueType) EnumDescriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{1}
}

type PostFeedbackType int32

const (
	PostFeedbackType_PostFeedbackTypeUnknown    PostFeedbackType = 0
	PostFeedbackType_PostFeedbackTypeLike       PostFeedbackType = 1
	PostFeedbackType_PostFeedbackTypeCancelLike PostFeedbackType = 2
)

// Enum value maps for PostFeedbackType.
var (
	PostFeedbackType_name = map[int32]string{
		0: "PostFeedbackTypeUnknown",
		1: "PostFeedbackTypeLike",
		2: "PostFeedbackTypeCancelLike",
	}
	PostFeedbackType_value = map[string]int32{
		"PostFeedbackTypeUnknown":    0,
		"PostFeedbackTypeLike":       1,
		"PostFeedbackTypeCancelLike": 2,
	}
)

func (x PostFeedbackType) Enum() *PostFeedbackType {
	p := new(PostFeedbackType)
	*p = x
	return p
}

func (x PostFeedbackType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PostFeedbackType) Descriptor() protoreflect.EnumDescriptor {
	return file_community_proto_enumTypes[2].Descriptor()
}

func (PostFeedbackType) Type() protoreflect.EnumType {
	return &file_community_proto_enumTypes[2]
}

func (x PostFeedbackType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PostFeedbackType.Descriptor instead.
func (PostFeedbackType) EnumDescriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{2}
}

type CreatePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Content   string          `protobuf:"bytes,1,opt,name=content,proto3" json:"content,omitempty"`
	Codes     []string        `protobuf:"bytes,2,rep,name=codes,proto3" json:"codes,omitempty"`
	PicList   []string        `protobuf:"bytes,3,rep,name=pic_list,json=picList,proto3" json:"pic_list,omitempty"`                                    // 图片列表
	Sentiment MarketSentiment `protobuf:"varint,4,opt,name=sentiment,proto3,enum=chatfinbot.community.v1.MarketSentiment" json:"sentiment,omitempty"` // 市场情绪
}

func (x *CreatePostReq) Reset() {
	*x = CreatePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostReq) ProtoMessage() {}

func (x *CreatePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostReq.ProtoReflect.Descriptor instead.
func (*CreatePostReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{0}
}

func (x *CreatePostReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *CreatePostReq) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *CreatePostReq) GetPicList() []string {
	if x != nil {
		return x.PicList
	}
	return nil
}

func (x *CreatePostReq) GetSentiment() MarketSentiment {
	if x != nil {
		return x.Sentiment
	}
	return MarketSentiment_MarketSentimentUnknown
}

type CreatePostRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret    int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg    string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	PostId int64  `protobuf:"varint,3,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"` // 帖子id
}

func (x *CreatePostRsp) Reset() {
	*x = CreatePostRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreatePostRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePostRsp) ProtoMessage() {}

func (x *CreatePostRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePostRsp.ProtoReflect.Descriptor instead.
func (*CreatePostRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{1}
}

func (x *CreatePostRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CreatePostRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CreatePostRsp) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type DeletePostReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"` // 帖子id
}

func (x *DeletePostReq) Reset() {
	*x = DeletePostReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostReq) ProtoMessage() {}

func (x *DeletePostReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostReq.ProtoReflect.Descriptor instead.
func (*DeletePostReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{2}
}

func (x *DeletePostReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type DeletePostRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeletePostRsp) Reset() {
	*x = DeletePostRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeletePostRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeletePostRsp) ProtoMessage() {}

func (x *DeletePostRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeletePostRsp.ProtoReflect.Descriptor instead.
func (*DeletePostRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{3}
}

func (x *DeletePostRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *DeletePostRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetStockPostsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code       string `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`                                  // 股票
	LastPostId int64  `protobuf:"varint,2,opt,name=last_post_id,json=lastPostId,proto3" json:"last_post_id,omitempty"` // 上一个帖子
	Size       int32  `protobuf:"varint,3,opt,name=size,proto3" json:"size,omitempty"`                                 //
}

func (x *GetStockPostsReq) Reset() {
	*x = GetStockPostsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockPostsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockPostsReq) ProtoMessage() {}

func (x *GetStockPostsReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockPostsReq.ProtoReflect.Descriptor instead.
func (*GetStockPostsReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{4}
}

func (x *GetStockPostsReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetStockPostsReq) GetLastPostId() int64 {
	if x != nil {
		return x.LastPostId
	}
	return 0
}

func (x *GetStockPostsReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type PostData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId      int64           `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"` //
	Content     string          `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`
	Codes       []string        `protobuf:"bytes,3,rep,name=codes,proto3" json:"codes,omitempty"`
	PicList     []string        `protobuf:"bytes,4,rep,name=pic_list,json=picList,proto3" json:"pic_list,omitempty"`                                    // 图片列表
	Sentiment   MarketSentiment `protobuf:"varint,5,opt,name=sentiment,proto3,enum=chatfinbot.community.v1.MarketSentiment" json:"sentiment,omitempty"` // 市场情绪
	CreateTime  int64           `protobuf:"varint,6,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"`                          // 创建时间
	UserInfo    *UserInfo       `protobuf:"bytes,7,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"`                                 //
	CommentList []*CommentData  `protobuf:"bytes,8,rep,name=comment_list,json=commentList,proto3" json:"comment_list,omitempty"`
	LikeNum     int32           `protobuf:"varint,9,opt,name=like_num,json=likeNum,proto3" json:"like_num,omitempty"`           // 点赞数
	CommentNum  int32           `protobuf:"varint,10,opt,name=comment_num,json=commentNum,proto3" json:"comment_num,omitempty"` // 评论数
	IsLike      bool            `protobuf:"varint,11,opt,name=is_like,json=isLike,proto3" json:"is_like,omitempty"`             // 是否点赞
}

func (x *PostData) Reset() {
	*x = PostData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostData) ProtoMessage() {}

func (x *PostData) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostData.ProtoReflect.Descriptor instead.
func (*PostData) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{5}
}

func (x *PostData) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *PostData) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *PostData) GetCodes() []string {
	if x != nil {
		return x.Codes
	}
	return nil
}

func (x *PostData) GetPicList() []string {
	if x != nil {
		return x.PicList
	}
	return nil
}

func (x *PostData) GetSentiment() MarketSentiment {
	if x != nil {
		return x.Sentiment
	}
	return MarketSentiment_MarketSentimentUnknown
}

func (x *PostData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *PostData) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *PostData) GetCommentList() []*CommentData {
	if x != nil {
		return x.CommentList
	}
	return nil
}

func (x *PostData) GetLikeNum() int32 {
	if x != nil {
		return x.LikeNum
	}
	return 0
}

func (x *PostData) GetCommentNum() int32 {
	if x != nil {
		return x.CommentNum
	}
	return 0
}

func (x *PostData) GetIsLike() bool {
	if x != nil {
		return x.IsLike
	}
	return false
}

type CommentData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserInfo   *UserInfo `protobuf:"bytes,1,opt,name=user_info,json=userInfo,proto3" json:"user_info,omitempty"` //
	Message    string    `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	CreateTime int64     `protobuf:"varint,3,opt,name=create_time,json=createTime,proto3" json:"create_time,omitempty"` // 创建时间
}

func (x *CommentData) Reset() {
	*x = CommentData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CommentData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentData) ProtoMessage() {}

func (x *CommentData) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentData.ProtoReflect.Descriptor instead.
func (*CommentData) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{6}
}

func (x *CommentData) GetUserInfo() *UserInfo {
	if x != nil {
		return x.UserInfo
	}
	return nil
}

func (x *CommentData) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CommentData) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

type UserInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId   string `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Nickname string `protobuf:"bytes,2,opt,name=nickname,proto3" json:"nickname,omitempty"`
	HeadUrl  string `protobuf:"bytes,3,opt,name=head_url,json=headUrl,proto3" json:"head_url,omitempty"`
}

func (x *UserInfo) Reset() {
	*x = UserInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UserInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UserInfo) ProtoMessage() {}

func (x *UserInfo) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UserInfo.ProtoReflect.Descriptor instead.
func (*UserInfo) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{7}
}

func (x *UserInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *UserInfo) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UserInfo) GetHeadUrl() string {
	if x != nil {
		return x.HeadUrl
	}
	return ""
}

type GetStockPostsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32       `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*PostData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetStockPostsRsp) Reset() {
	*x = GetStockPostsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockPostsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockPostsRsp) ProtoMessage() {}

func (x *GetStockPostsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockPostsRsp.ProtoReflect.Descriptor instead.
func (*GetStockPostsRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{8}
}

func (x *GetStockPostsRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetStockPostsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetStockPostsRsp) GetList() []*PostData {
	if x != nil {
		return x.List
	}
	return nil
}

type GetMyPostsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LastPostId int64 `protobuf:"varint,1,opt,name=last_post_id,json=lastPostId,proto3" json:"last_post_id,omitempty"` // 上一个帖子
	Size       int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"`                                 //
}

func (x *GetMyPostsReq) Reset() {
	*x = GetMyPostsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPostsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPostsReq) ProtoMessage() {}

func (x *GetMyPostsReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPostsReq.ProtoReflect.Descriptor instead.
func (*GetMyPostsReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{9}
}

func (x *GetMyPostsReq) GetLastPostId() int64 {
	if x != nil {
		return x.LastPostId
	}
	return 0
}

func (x *GetMyPostsReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetMyPostsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32       `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg  string      `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*PostData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMyPostsRsp) Reset() {
	*x = GetMyPostsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyPostsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyPostsRsp) ProtoMessage() {}

func (x *GetMyPostsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyPostsRsp.ProtoReflect.Descriptor instead.
func (*GetMyPostsRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{10}
}

func (x *GetMyPostsRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetMyPostsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMyPostsRsp) GetList() []*PostData {
	if x != nil {
		return x.List
	}
	return nil
}

type AddCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId  int64  `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"` // 帖子id
	Content string `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`              // 内容
}

func (x *AddCommentReq) Reset() {
	*x = AddCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentReq) ProtoMessage() {}

func (x *AddCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentReq.ProtoReflect.Descriptor instead.
func (*AddCommentReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{11}
}

func (x *AddCommentReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *AddCommentReq) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type AddCommentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret       int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg       string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	CommentId int64  `protobuf:"varint,3,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论id
}

func (x *AddCommentRsp) Reset() {
	*x = AddCommentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddCommentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddCommentRsp) ProtoMessage() {}

func (x *AddCommentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddCommentRsp.ProtoReflect.Descriptor instead.
func (*AddCommentRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{12}
}

func (x *AddCommentRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *AddCommentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *AddCommentRsp) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteCommentReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PostId    int64 `protobuf:"varint,1,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`          // 帖子id
	CommentId int64 `protobuf:"varint,2,opt,name=comment_id,json=commentId,proto3" json:"comment_id,omitempty"` // 评论id
}

func (x *DeleteCommentReq) Reset() {
	*x = DeleteCommentReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentReq) ProtoMessage() {}

func (x *DeleteCommentReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentReq.ProtoReflect.Descriptor instead.
func (*DeleteCommentReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteCommentReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

func (x *DeleteCommentReq) GetCommentId() int64 {
	if x != nil {
		return x.CommentId
	}
	return 0
}

type DeleteCommentRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *DeleteCommentRsp) Reset() {
	*x = DeleteCommentRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteCommentRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRsp) ProtoMessage() {}

func (x *DeleteCommentRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRsp.ProtoReflect.Descriptor instead.
func (*DeleteCommentRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{14}
}

func (x *DeleteCommentRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *DeleteCommentRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type GetMyCommentsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	From int64 `protobuf:"varint,1,opt,name=from,proto3" json:"from,omitempty"`
	Size int32 `protobuf:"varint,2,opt,name=size,proto3" json:"size,omitempty"` //
}

func (x *GetMyCommentsReq) Reset() {
	*x = GetMyCommentsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCommentsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCommentsReq) ProtoMessage() {}

func (x *GetMyCommentsReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCommentsReq.ProtoReflect.Descriptor instead.
func (*GetMyCommentsReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{15}
}

func (x *GetMyCommentsReq) GetFrom() int64 {
	if x != nil {
		return x.From
	}
	return 0
}

func (x *GetMyCommentsReq) GetSize() int32 {
	if x != nil {
		return x.Size
	}
	return 0
}

type GetMyCommentsRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
	List []*CommentData `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetMyCommentsRsp) Reset() {
	*x = GetMyCommentsRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMyCommentsRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMyCommentsRsp) ProtoMessage() {}

func (x *GetMyCommentsRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMyCommentsRsp.ProtoReflect.Descriptor instead.
func (*GetMyCommentsRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{16}
}

func (x *GetMyCommentsRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetMyCommentsRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetMyCommentsRsp) GetList() []*CommentData {
	if x != nil {
		return x.List
	}
	return nil
}

type PostQueue struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type     PostQueueType `protobuf:"varint,1,opt,name=type,proto3,enum=chatfinbot.community.v1.PostQueueType" json:"type,omitempty"`
	PostData *PostData     `protobuf:"bytes,2,opt,name=post_data,json=postData,proto3" json:"post_data,omitempty"`
}

func (x *PostQueue) Reset() {
	*x = PostQueue{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostQueue) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostQueue) ProtoMessage() {}

func (x *PostQueue) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostQueue.ProtoReflect.Descriptor instead.
func (*PostQueue) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{17}
}

func (x *PostQueue) GetType() PostQueueType {
	if x != nil {
		return x.Type
	}
	return PostQueueType_PostQueueTypeUnknown
}

func (x *PostQueue) GetPostData() *PostData {
	if x != nil {
		return x.PostData
	}
	return nil
}

type PostFeedbackReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type   PostFeedbackType `protobuf:"varint,1,opt,name=type,proto3,enum=chatfinbot.community.v1.PostFeedbackType" json:"type,omitempty"`
	PostId int64            `protobuf:"varint,2,opt,name=post_id,json=postId,proto3" json:"post_id,omitempty"`
}

func (x *PostFeedbackReq) Reset() {
	*x = PostFeedbackReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFeedbackReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFeedbackReq) ProtoMessage() {}

func (x *PostFeedbackReq) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFeedbackReq.ProtoReflect.Descriptor instead.
func (*PostFeedbackReq) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{18}
}

func (x *PostFeedbackReq) GetType() PostFeedbackType {
	if x != nil {
		return x.Type
	}
	return PostFeedbackType_PostFeedbackTypeUnknown
}

func (x *PostFeedbackReq) GetPostId() int64 {
	if x != nil {
		return x.PostId
	}
	return 0
}

type PostFeedbackRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *PostFeedbackRsp) Reset() {
	*x = PostFeedbackRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_community_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PostFeedbackRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PostFeedbackRsp) ProtoMessage() {}

func (x *PostFeedbackRsp) ProtoReflect() protoreflect.Message {
	mi := &file_community_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PostFeedbackRsp.ProtoReflect.Descriptor instead.
func (*PostFeedbackRsp) Descriptor() ([]byte, []int) {
	return file_community_proto_rawDescGZIP(), []int{19}
}

func (x *PostFeedbackRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *PostFeedbackRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_community_proto protoreflect.FileDescriptor

var file_community_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x17, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa2, 0x01, 0x0a, 0x0d, 0x43, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19, 0x0a, 0x08, 0x70, 0x69,
	0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x70, 0x69,
	0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x22, 0x4c, 0x0a,
	0x0d, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x28, 0x0a, 0x0d, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70,
	0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x33, 0x0a, 0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x5c, 0x0a, 0x10, 0x47, 0x65,
	0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f, 0x70, 0x6f, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c, 0x61, 0x73, 0x74, 0x50, 0x6f,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0xb5, 0x03, 0x0a, 0x08, 0x50, 0x6f, 0x73,
	0x74, 0x44, 0x61, 0x74, 0x61, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x18,
	0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x05, 0x63, 0x6f, 0x64, 0x65, 0x73, 0x12, 0x19,
	0x0a, 0x08, 0x70, 0x69, 0x63, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x07, 0x70, 0x69, 0x63, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x46, 0x0a, 0x09, 0x73, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x28, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x09, 0x73, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e,
	0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x12, 0x3e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x47, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0b,
	0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x6c,
	0x69, 0x6b, 0x65, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x6c,
	0x69, 0x6b, 0x65, 0x4e, 0x75, 0x6d, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x6f, 0x6d,
	0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x75, 0x6d, 0x12, 0x17, 0x0a, 0x07, 0x69, 0x73, 0x5f, 0x6c, 0x69,
	0x6b, 0x65, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x69, 0x73, 0x4c, 0x69, 0x6b, 0x65,
	0x22, 0x88, 0x01, 0x0a, 0x0b, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x12, 0x3e, 0x0a, 0x09, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x73,
	0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x18, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x5f, 0x74, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x22, 0x5a, 0x0a, 0x08, 0x55,
	0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x17, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x08,
	0x68, 0x65, 0x61, 0x64, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x65, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0x6d, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x53, 0x74,
	0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12,
	0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75,
	0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x45, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x20, 0x0a, 0x0c, 0x6c, 0x61, 0x73, 0x74, 0x5f,
	0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6c,
	0x61, 0x73, 0x74, 0x50, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22, 0x6a, 0x0a,
	0x0d, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x35, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0x42, 0x0a, 0x0d, 0x41, 0x64, 0x64,
	0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f,
	0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73,
	0x74, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x22, 0x52, 0x0a,
	0x0d, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x22, 0x4a, 0x0a, 0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65,
	0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d,
	0x0a, 0x0a, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x36, 0x0a,
	0x10, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x73,
	0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03,
	0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x3a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x12, 0x12, 0x0a, 0x04, 0x66, 0x72, 0x6f,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x66, 0x72, 0x6f, 0x6d, 0x12, 0x12, 0x0a,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x22, 0x70, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x73, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x38, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x87, 0x01, 0x0a, 0x09, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x12, 0x3a, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75,
	0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x3e, 0x0a,
	0x09, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f,
	0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x44,
	0x61, 0x74, 0x61, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x69, 0x0a,
	0x0f, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x65, 0x71,
	0x12, 0x3d, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x17, 0x0a, 0x07, 0x70, 0x6f, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x50, 0x6f, 0x73, 0x74,
	0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72,
	0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x2a,
	0x81, 0x01, 0x0a, 0x0f, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e,
	0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12,
	0x1a, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65,
	0x6e, 0x74, 0x42, 0x75, 0x6c, 0x6c, 0x69, 0x73, 0x68, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x4d,
	0x61, 0x72, 0x6b, 0x65, 0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x42, 0x65,
	0x61, 0x72, 0x69, 0x73, 0x68, 0x10, 0x02, 0x12, 0x1a, 0x0a, 0x16, 0x4d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x53, 0x65, 0x6e, 0x74, 0x69, 0x6d, 0x65, 0x6e, 0x74, 0x4e, 0x65, 0x75, 0x74, 0x72, 0x61,
	0x6c, 0x10, 0x03, 0x2a, 0x55, 0x0a, 0x0d, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x14, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x14,
	0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75, 0x65, 0x54, 0x79, 0x70, 0x65, 0x41,
	0x64, 0x64, 0x10, 0x01, 0x12, 0x14, 0x0a, 0x10, 0x50, 0x6f, 0x73, 0x74, 0x51, 0x75, 0x65, 0x75,
	0x65, 0x54, 0x79, 0x70, 0x65, 0x44, 0x65, 0x6c, 0x10, 0x02, 0x2a, 0x69, 0x0a, 0x10, 0x50, 0x6f,
	0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1b,
	0x0a, 0x17, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79,
	0x70, 0x65, 0x55, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x10, 0x00, 0x12, 0x18, 0x0a, 0x14, 0x50,
	0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x4c,
	0x69, 0x6b, 0x65, 0x10, 0x01, 0x12, 0x1e, 0x0a, 0x1a, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65,
	0x64, 0x62, 0x61, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x43, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x4c,
	0x69, 0x6b, 0x65, 0x10, 0x02, 0x32, 0xcf, 0x08, 0x0a, 0x10, 0x43, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x65,
	0x71, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x12,
	0x82, 0x01, 0x0a, 0x0a, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x12, 0x26,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50,
	0x6f, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x50, 0x6f, 0x73, 0x74, 0x52, 0x73, 0x70, 0x22, 0x24,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d,
	0x70, 0x6f, 0x73, 0x74, 0x12, 0x82, 0x01, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63,
	0x6b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65,
	0x71, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63,
	0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x6f, 0x63, 0x6b, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3,
	0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e,
	0x69, 0x74, 0x79, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x7c, 0x0a, 0x0a, 0x47, 0x65, 0x74,
	0x4d, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50, 0x6f, 0x73, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x50,
	0x6f, 0x73, 0x74, 0x73, 0x52, 0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d,
	0x79, 0x2d, 0x70, 0x6f, 0x73, 0x74, 0x73, 0x12, 0x82, 0x01, 0x0a, 0x0a, 0x41, 0x64, 0x64, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31,
	0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x64, 0x64, 0x43, 0x6f, 0x6d, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01,
	0x2a, 0x22, 0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2f, 0x61, 0x64, 0x64, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x8e, 0x01, 0x0a,
	0x0d, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43,
	0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e,
	0x74, 0x52, 0x73, 0x70, 0x22, 0x27, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x21, 0x3a, 0x01, 0x2a, 0x22,
	0x1c, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x8a, 0x01,
	0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x29,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d,
	0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f,
	0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x79, 0x43, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x52, 0x73, 0x70, 0x22, 0x24, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1e, 0x3a, 0x01, 0x2a, 0x22,
	0x19, 0x2f, 0x76, 0x31, 0x2f, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x6d,
	0x79, 0x2d, 0x63, 0x6f, 0x6d, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x8a, 0x01, 0x0a, 0x0c, 0x50,
	0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x12, 0x28, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69,
	0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e, 0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61,
	0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2e, 0x76, 0x31, 0x2e,
	0x50, 0x6f, 0x73, 0x74, 0x46, 0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x52, 0x73, 0x70, 0x22,
	0x26, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x20, 0x3a, 0x01, 0x2a, 0x22, 0x1b, 0x2f, 0x76, 0x31, 0x2f,
	0x63, 0x6f, 0x6d, 0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x2f, 0x70, 0x6f, 0x73, 0x74, 0x2d, 0x66,
	0x65, 0x65, 0x64, 0x62, 0x61, 0x63, 0x6b, 0x42, 0x0f, 0x5a, 0x0d, 0x2e, 0x3b, 0x63, 0x6f, 0x6d,
	0x6d, 0x75, 0x6e, 0x69, 0x74, 0x79, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_community_proto_rawDescOnce sync.Once
	file_community_proto_rawDescData = file_community_proto_rawDesc
)

func file_community_proto_rawDescGZIP() []byte {
	file_community_proto_rawDescOnce.Do(func() {
		file_community_proto_rawDescData = protoimpl.X.CompressGZIP(file_community_proto_rawDescData)
	})
	return file_community_proto_rawDescData
}

var file_community_proto_enumTypes = make([]protoimpl.EnumInfo, 3)
var file_community_proto_msgTypes = make([]protoimpl.MessageInfo, 20)
var file_community_proto_goTypes = []interface{}{
	(MarketSentiment)(0),     // 0: chatfinbot.community.v1.MarketSentiment
	(PostQueueType)(0),       // 1: chatfinbot.community.v1.PostQueueType
	(PostFeedbackType)(0),    // 2: chatfinbot.community.v1.PostFeedbackType
	(*CreatePostReq)(nil),    // 3: chatfinbot.community.v1.CreatePostReq
	(*CreatePostRsp)(nil),    // 4: chatfinbot.community.v1.CreatePostRsp
	(*DeletePostReq)(nil),    // 5: chatfinbot.community.v1.DeletePostReq
	(*DeletePostRsp)(nil),    // 6: chatfinbot.community.v1.DeletePostRsp
	(*GetStockPostsReq)(nil), // 7: chatfinbot.community.v1.GetStockPostsReq
	(*PostData)(nil),         // 8: chatfinbot.community.v1.PostData
	(*CommentData)(nil),      // 9: chatfinbot.community.v1.CommentData
	(*UserInfo)(nil),         // 10: chatfinbot.community.v1.UserInfo
	(*GetStockPostsRsp)(nil), // 11: chatfinbot.community.v1.GetStockPostsRsp
	(*GetMyPostsReq)(nil),    // 12: chatfinbot.community.v1.GetMyPostsReq
	(*GetMyPostsRsp)(nil),    // 13: chatfinbot.community.v1.GetMyPostsRsp
	(*AddCommentReq)(nil),    // 14: chatfinbot.community.v1.AddCommentReq
	(*AddCommentRsp)(nil),    // 15: chatfinbot.community.v1.AddCommentRsp
	(*DeleteCommentReq)(nil), // 16: chatfinbot.community.v1.DeleteCommentReq
	(*DeleteCommentRsp)(nil), // 17: chatfinbot.community.v1.DeleteCommentRsp
	(*GetMyCommentsReq)(nil), // 18: chatfinbot.community.v1.GetMyCommentsReq
	(*GetMyCommentsRsp)(nil), // 19: chatfinbot.community.v1.GetMyCommentsRsp
	(*PostQueue)(nil),        // 20: chatfinbot.community.v1.PostQueue
	(*PostFeedbackReq)(nil),  // 21: chatfinbot.community.v1.PostFeedbackReq
	(*PostFeedbackRsp)(nil),  // 22: chatfinbot.community.v1.PostFeedbackRsp
}
var file_community_proto_depIdxs = []int32{
	0,  // 0: chatfinbot.community.v1.CreatePostReq.sentiment:type_name -> chatfinbot.community.v1.MarketSentiment
	0,  // 1: chatfinbot.community.v1.PostData.sentiment:type_name -> chatfinbot.community.v1.MarketSentiment
	10, // 2: chatfinbot.community.v1.PostData.user_info:type_name -> chatfinbot.community.v1.UserInfo
	9,  // 3: chatfinbot.community.v1.PostData.comment_list:type_name -> chatfinbot.community.v1.CommentData
	10, // 4: chatfinbot.community.v1.CommentData.user_info:type_name -> chatfinbot.community.v1.UserInfo
	8,  // 5: chatfinbot.community.v1.GetStockPostsRsp.list:type_name -> chatfinbot.community.v1.PostData
	8,  // 6: chatfinbot.community.v1.GetMyPostsRsp.list:type_name -> chatfinbot.community.v1.PostData
	9,  // 7: chatfinbot.community.v1.GetMyCommentsRsp.list:type_name -> chatfinbot.community.v1.CommentData
	1,  // 8: chatfinbot.community.v1.PostQueue.type:type_name -> chatfinbot.community.v1.PostQueueType
	8,  // 9: chatfinbot.community.v1.PostQueue.post_data:type_name -> chatfinbot.community.v1.PostData
	2,  // 10: chatfinbot.community.v1.PostFeedbackReq.type:type_name -> chatfinbot.community.v1.PostFeedbackType
	3,  // 11: chatfinbot.community.v1.CommunityService.CreatePost:input_type -> chatfinbot.community.v1.CreatePostReq
	5,  // 12: chatfinbot.community.v1.CommunityService.DeletePost:input_type -> chatfinbot.community.v1.DeletePostReq
	7,  // 13: chatfinbot.community.v1.CommunityService.GetStockPosts:input_type -> chatfinbot.community.v1.GetStockPostsReq
	12, // 14: chatfinbot.community.v1.CommunityService.GetMyPosts:input_type -> chatfinbot.community.v1.GetMyPostsReq
	14, // 15: chatfinbot.community.v1.CommunityService.AddComment:input_type -> chatfinbot.community.v1.AddCommentReq
	16, // 16: chatfinbot.community.v1.CommunityService.DeleteComment:input_type -> chatfinbot.community.v1.DeleteCommentReq
	18, // 17: chatfinbot.community.v1.CommunityService.GetMyComment:input_type -> chatfinbot.community.v1.GetMyCommentsReq
	21, // 18: chatfinbot.community.v1.CommunityService.PostFeedback:input_type -> chatfinbot.community.v1.PostFeedbackReq
	4,  // 19: chatfinbot.community.v1.CommunityService.CreatePost:output_type -> chatfinbot.community.v1.CreatePostRsp
	6,  // 20: chatfinbot.community.v1.CommunityService.DeletePost:output_type -> chatfinbot.community.v1.DeletePostRsp
	11, // 21: chatfinbot.community.v1.CommunityService.GetStockPosts:output_type -> chatfinbot.community.v1.GetStockPostsRsp
	13, // 22: chatfinbot.community.v1.CommunityService.GetMyPosts:output_type -> chatfinbot.community.v1.GetMyPostsRsp
	15, // 23: chatfinbot.community.v1.CommunityService.AddComment:output_type -> chatfinbot.community.v1.AddCommentRsp
	17, // 24: chatfinbot.community.v1.CommunityService.DeleteComment:output_type -> chatfinbot.community.v1.DeleteCommentRsp
	19, // 25: chatfinbot.community.v1.CommunityService.GetMyComment:output_type -> chatfinbot.community.v1.GetMyCommentsRsp
	22, // 26: chatfinbot.community.v1.CommunityService.PostFeedback:output_type -> chatfinbot.community.v1.PostFeedbackRsp
	19, // [19:27] is the sub-list for method output_type
	11, // [11:19] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_community_proto_init() }
func file_community_proto_init() {
	if File_community_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_community_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreatePostRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeletePostRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockPostsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CommentData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UserInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockPostsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPostsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyPostsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddCommentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteCommentRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCommentsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMyCommentsRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostQueue); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFeedbackReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_community_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PostFeedbackRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_community_proto_rawDesc,
			NumEnums:      3,
			NumMessages:   20,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_community_proto_goTypes,
		DependencyIndexes: file_community_proto_depIdxs,
		EnumInfos:         file_community_proto_enumTypes,
		MessageInfos:      file_community_proto_msgTypes,
	}.Build()
	File_community_proto = out.File
	file_community_proto_rawDesc = nil
	file_community_proto_goTypes = nil
	file_community_proto_depIdxs = nil
}
