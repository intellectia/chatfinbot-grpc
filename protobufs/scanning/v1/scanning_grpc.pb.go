// Code generated by protoc-gen-go-grpc. DO NOT EDIT.
// versions:
// - protoc-gen-go-grpc v1.2.0
// - protoc             v3.20.3
// source: scanning.proto

package scanningpb

import (
	context "context"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
)

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
// Requires gRPC-Go v1.32.0 or later.
const _ = grpc.SupportPackageIsVersion7

// WritingsServiceClient is the client API for WritingsService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://pkg.go.dev/google.golang.org/grpc/?tab=doc#ClientConn.NewStream.
type WritingsServiceClient interface {
	ScanningText(ctx context.Context, in *ScanningTextRequest, opts ...grpc.CallOption) (*ScanningTextResponse, error)
}

type writingsServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWritingsServiceClient(cc grpc.ClientConnInterface) WritingsServiceClient {
	return &writingsServiceClient{cc}
}

func (c *writingsServiceClient) ScanningText(ctx context.Context, in *ScanningTextRequest, opts ...grpc.CallOption) (*ScanningTextResponse, error) {
	out := new(ScanningTextResponse)
	err := c.cc.Invoke(ctx, "/chatfinbot.scanning.v1.WritingsService/ScanningText", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WritingsServiceServer is the server API for WritingsService service.
// All implementations must embed UnimplementedWritingsServiceServer
// for forward compatibility
type WritingsServiceServer interface {
	ScanningText(context.Context, *ScanningTextRequest) (*ScanningTextResponse, error)
	mustEmbedUnimplementedWritingsServiceServer()
}

// UnimplementedWritingsServiceServer must be embedded to have forward compatible implementations.
type UnimplementedWritingsServiceServer struct {
}

func (UnimplementedWritingsServiceServer) ScanningText(context.Context, *ScanningTextRequest) (*ScanningTextResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScanningText not implemented")
}
func (UnimplementedWritingsServiceServer) mustEmbedUnimplementedWritingsServiceServer() {}

// UnsafeWritingsServiceServer may be embedded to opt out of forward compatibility for this service.
// Use of this interface is not recommended, as added methods to WritingsServiceServer will
// result in compilation errors.
type UnsafeWritingsServiceServer interface {
	mustEmbedUnimplementedWritingsServiceServer()
}

func RegisterWritingsServiceServer(s grpc.ServiceRegistrar, srv WritingsServiceServer) {
	s.RegisterService(&WritingsService_ServiceDesc, srv)
}

func _WritingsService_ScanningText_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScanningTextRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WritingsServiceServer).ScanningText(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/chatfinbot.scanning.v1.WritingsService/ScanningText",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WritingsServiceServer).ScanningText(ctx, req.(*ScanningTextRequest))
	}
	return interceptor(ctx, in, info, handler)
}

// WritingsService_ServiceDesc is the grpc.ServiceDesc for WritingsService service.
// It's only intended for direct use with grpc.RegisterService,
// and not to be introspected or modified (even as a copy)
var WritingsService_ServiceDesc = grpc.ServiceDesc{
	ServiceName: "chatfinbot.scanning.v1.WritingsService",
	HandlerType: (*WritingsServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScanningText",
			Handler:    _WritingsService_ScanningText_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "scanning.proto",
}
