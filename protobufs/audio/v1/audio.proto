syntax = "proto3";

package chatfinbot.audio.v1;

option go_package = ".;audiopb";
import "google/api/annotations.proto";

service AudioService {
    rpc CreateRecord(CreateRecordReq) returns (CreateRecordRsp) {
        option (google.api.http) = {
			post: "/v1/audio/record",
			body: "*"
		};
    };
    rpc GetRecordList(GetRecordListReq) returns (GetRecordListRsp) {
        option (google.api.http) = {
			get: "/v1/audio/record-list"
		};
    };
    rpc GetRecordStatus(GetRecordStatusReq) returns (GetRecordStatusRsp) {
        option (google.api.http) = {
			get: "/v1/audio/record-status"
		};
    };
    rpc Transcription(TranscriptionReq) returns (TranscriptionRsp) {
        option (google.api.http) = {
			post: "/v1/audio/trans",
            body: "*"
		};
    };
    rpc GetTransData(GetTransDataReq) returns (GetTransDataRsp) {
        option (google.api.http) = {
			get: "/v1/audio/trans-data"
		};
    };

    rpc SummaryDepth(SummaryDepthReq) returns (SummaryDepthRsp) {
        option (google.api.http) = {
			post: "/v1/audio/summary-depth",
            body: "*"
		};
    };

    rpc GetSummaryDepth(GetSummaryDepthReq) returns (GetSummaryDepthRsp) {
        option (google.api.http) = {
			get: "/v1/audio/summary-depth"
		};
    };

    rpc UpdateSummary(UpdateSummaryReq) returns (UpdateSummaryRsp) {
        option (google.api.http) = {
			post: "/v1/audio/update-summary",
            body: "*"
		};
    };

    rpc CheckTrans(CheckTransReq) returns (CheckTransRsp) {
        option (google.api.http) = {
			post: "/v1/audio/check-trans",
            body: "*"
		};
    };

    rpc UpdateRecord(UpdateRecordReq) returns (UpdateRecordRsp) {
        option (google.api.http) = {
			post: "/v1/audio/update-record",
            body: "*"
		};
    };

    rpc GetSchedule(GetScheduleReq) returns (GetScheduleRsp) {
        option (google.api.http) = {
			get: "/v1/audio/schedule"
		};
    };
    
}

message CreateRecordReq {
    string session_id = 1; // session id
    string doc_id = 2; // 文件id
}

message CreateRecordRsp {
    int32 ret = 1; 
    string msg = 2;
    string job_id = 3; // 获取任务id


}

message GetRecordListReq {
    string session_id = 1; // session id
    uint32 page = 2; // 页码 
    uint32 page_size = 3; // 页数
}

message GetRecordListRsp {
    int32 ret = 1; 
    string msg = 2;
    repeated MediaRecord list = 3;
}

message MediaRecord {
    string doc_id = 1; // 文件id
    repeated MediaContent content = 2; // 内容
    string session_id = 3; // session id
    string summary = 4; // 总结
    string create_at = 5; // 创建时间
    string update_at = 6; // 更新时间
    uint32 status = 7; //进度
    string schedule = 8; // 进度 
    string url = 9; // 视频链接地址 
    uint32 media_type = 10; // 媒体类型 
    repeated MediaSummary partial_summary = 11; // 部分内容
    repeated string todo = 12; // 待办事项
    bool is_depth_summary = 13; // 是否有深度总结
    string depth_summary = 14; // 深度总结
    ScheduleStatus depth_summary_status = 15; // 深度总结状态
    string depth_summary_schedule = 16; // 深度总结进度
    ScheduleStatus summary_status = 17; // 概要总结状态
    string summary_schedule = 18; // 概要总结进度
    ScheduleStatus todo_status = 19; // 待办事项状态
    string todo_schedule = 20; // 待办事项进度
    ScheduleStatus partial_summary_status = 21; // 分段总结状态
    string partial_summary_schedule = 22; // 分段总结进度
    ScheduleStatus content_status = 23; // 字幕状态
    string content_schedule = 24; // 字幕进度
}

message GetRecordStatusReq {
    string job_id = 1; // 任务id
}

message GetRecordStatusRsp {
    int32 ret = 1; 
    string msg = 2;
    MediaRecord data = 3;
}

message TranscriptionReq {
    string doc_id = 1; // 音频id
    string session_id = 2; // session id
    repeated MediaContent content = 3; // 追加内容
    uint32 stype = 4; // 状态 1=追加 2=覆盖 3=结束录制   2=后面会去掉
}

message MediaContent {
    string start = 1;
    string text = 2;
    double duration = 3;
    string role = 4;
}

message MediaSummary {
    string start = 1;
    string text = 2;
}

message TranscriptionRsp {
    int32 ret = 1; 
    string msg = 2;
}

message GetTransDataReq {
    string session_id = 1; // session id
}

message GetTransDataRsp {
    int32 ret = 1; 
    string msg = 2;
    MediaRecord data = 3;
}

enum ChatMediaStatus {
    ChatMediaStatusPending = 0;// 待开始
    ChatMediaStatusDownload = 1; // 下载
    ChatMediaStatusSplitMedia = 2;  // 拆分音频
    ChatMediaStatusToText = 3; // 转文字中
    ChatMediaStatusSummary = 4; // 总结中
    ChatMediaStatusSuccess = 5; // 成功
    ChatMediaStatusFail = 6; // 失败
    ChatMediaStatusTrans = 7; // 录制中
    ChatMediaStatusTransEnd = 8; // 结束录制
}


enum AudioSummaryType {
    AudioSummaryTypeUnknown = 0; // 未知（不要使用）
    AudioSummaryTypePartialSummary = 1; // 部分总结
    AudioSummaryTypeCommSummary = 2; // 普通总结
    AudioSummaryTypeDepthSummary = 3; // 深度总结
    AudioSummaryTypeToDo= 4; // 待办事项
}

enum MediaType{
    MediaTypeUnknown = 0; // 未知（不要使用）
    MediaTypeRecordAudio = 1; // 录音文件
    MediaTypeLiveAudio = 2; // 实时语音
    MediaTypeMeetingAudio = 3; // 会议音频
    MediaTypeMeetingVideo = 4; // 会议视频
}

message AudioSummary {
    AudioSummaryType summary_type = 1;
    string doc_id = 2; 
    string session_id = 3;
    string user_id = 4;
    string content = 5;
    string start = 6;
    MediaType media_type = 7;
    AudioSummaryPartialData partial_data = 8;
}

message AudioSummaryPartialData {
    int32 cur_pos = 1;
    repeated AudioSummaryPartialPos list = 2;
}

message AudioSummaryPartialPos {
    int32 begin =  1;
    int32 end =  2;
}

message AudioSummaryStatus {
    AudioSummary data = 1;
    string job_id = 2;
    int64 submit_time = 3;
}

message SummaryDepthReq {
    string session_id = 1;
    string doc_id = 2;
}

message SummaryDepthRsp {
    int32 ret = 1; 
    string msg = 2;
}


message UpdateSummaryReq {
    string session_id = 1;
    string doc_id = 2;
    string content = 3;
    uint32 content_type = 4; // 总结类型 1=普通总结 2=深度总结
}

message UpdateSummaryRsp {
    int32 ret = 1; 
    string msg = 2;
}

message GetSummaryDepthReq {
    string session_id = 1;
    string doc_id = 2;
}

message GetSummaryDepthRsp {
    int32 ret = 1; 
    string msg = 2;
    string content = 3;
}

enum  CheckTransType {
    CheckTransTypeUnknown = 0; // 未知（不要使用）
    CheckTransTypeStart = 1; // 开始检测
    CheckTransTypeCost = 2; // 耗时
}

message CheckTransReq {
    CheckTransType stype = 1; // 类型
    uint32 cost = 2; // 耗时
}

message CheckTransRsp {
    int32 ret = 1; 
    string msg = 2;
}

enum UpdateRecordType {
    UpdateRecordTypeUnknown = 0; // 未知（不要使用）
    UpdateRecordTypeContent = 1; // 更新字幕
    UpdateRecordTypePartialSummary = 2; // 更新分段总结
    UpdateRecordTypeSummary = 3; // 更新概要总结
    UpdateRecordTypeDepthSummary = 4; // 更新深度总结
    UpdateRecordTypeDepthTodo = 5; // 更新TODO
}

message UpdateRecordReq {
    string session_id = 1;   // session的id
    string doc_id = 2;      // 文档id
    UpdateRecordType stype = 3; // 更新类型
    MediaContent content = 4; // 更新字幕内容
    MediaSummary partial_summary = 5; // 分段总结
    string summary = 6; // 概要总结和深度总结
    repeated string todo = 7; // 编辑todo
}


message UpdateRecordRsp {
    int32 ret = 1; 
    string msg = 2;
}

message GetScheduleReq {
    string session_id = 1;   // session的id
    string doc_id = 2;      // 文档id
    bool show_content = 3; // 是否返回字幕
    bool show_partial_summary = 4; // 是否返回章节信息
    bool show_summary = 5; // 是否返回概要总结
    bool show_depth_summary = 6; // 是否返回深度总结
    bool show_todo = 7; // 是否返回todo
}

message GetScheduleRsp {
    int32 ret = 1; 
    string msg = 2;
    repeated ScheduleInfo list = 3;
}

enum ScheduleStatus {
    ScheduleStatusUnknown = 0; // 未知（不要使用）
    ScheduleStatusProccess = 1; // 处理中
    ScheduleStatusSuccess = 2; // 成功
    ScheduleStatusFail = 3; // 失败
    ScheduleStatusNotStart = 4; // 没有开始
} 

message ScheduleInfo { 
    ScheduleInfoSubtitles content_info = 1;  // 字幕数据
    ScheduleInfoChapter  partial_summary_info = 2;     // 章节总结
    ScheduleInfoSummary summary_info = 3; // 概要总结信息
    ScheduleInfoDepthSummary  depth_summary_info = 4; // 深度总结信息
    ScheduleInfoTodo  todo_info = 5; // todo
}

message ScheduleInfoSubtitles {
    ScheduleStatus status = 1;
    repeated MediaContent content = 2;
    string schedule = 3; 
}

message ScheduleInfoChapter {
    ScheduleStatus status = 1;
    repeated MediaContent partial_summary = 2;
    string schedule = 3; 
}

message ScheduleInfoSummary {
    ScheduleStatus status = 1;
    string summary = 2;
    string schedule = 3; 
}

message ScheduleInfoDepthSummary {
    ScheduleStatus status = 1;
    string summary_depth = 2;
    string schedule = 3; 
}

message ScheduleInfoTodo {
    ScheduleStatus status = 1;
    repeated string todo = 2;
    string schedule = 3; 
}
