// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v4.23.4
// source: share/v1/share.proto

package sharepb

import (
	v1 "github.com/intellectia/chatfinbot-grpc/protobufs/search/v1"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GetChatInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetChatInfoReq) Reset() {
	*x = GetChatInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatInfoReq) ProtoMessage() {}

func (x *GetChatInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatInfoReq.ProtoReflect.Descriptor instead.
func (*GetChatInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{0}
}

func (x *GetChatInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetChatInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type GetChatInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
	List []*ChatHistory `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetChatInfoRsp) Reset() {
	*x = GetChatInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetChatInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetChatInfoRsp) ProtoMessage() {}

func (x *GetChatInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetChatInfoRsp.ProtoReflect.Descriptor instead.
func (*GetChatInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{1}
}

func (x *GetChatInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetChatInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetChatInfoRsp) GetList() []*ChatHistory {
	if x != nil {
		return x.List
	}
	return nil
}

type ChatHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Role           string                     `protobuf:"bytes,1,opt,name=role,proto3" json:"role,omitempty"`
	Name           string                     `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Message        string                     `protobuf:"bytes,3,opt,name=message,proto3" json:"message,omitempty"`
	MessageId      int64                      `protobuf:"varint,4,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	IsRated        bool                       `protobuf:"varint,5,opt,name=is_rated,json=isRated,proto3" json:"is_rated,omitempty"`
	RateScore      int32                      `protobuf:"varint,6,opt,name=rate_score,json=rateScore,proto3" json:"rate_score,omitempty"`
	AdditionalData *ChatHistoryAdditionalData `protobuf:"bytes,7,opt,name=additional_data,json=additionalData,proto3" json:"additional_data,omitempty"`
	ChatType       uint32                     `protobuf:"varint,8,opt,name=chat_type,json=chatType,proto3" json:"chat_type,omitempty"` // 消息类型 0=普通消息 1=公司简介 2=行情指标 3=股东信息 4=高管 5=财务指标 6主营业务 7=员工构成
	Params         string                     `protobuf:"bytes,9,opt,name=params,proto3" json:"params,omitempty"`
	Context        string                     `protobuf:"bytes,10,opt,name=context,proto3" json:"context,omitempty"`
	Images         string                     `protobuf:"bytes,11,opt,name=images,proto3" json:"images,omitempty"`
	ChatId         string                     `protobuf:"bytes,12,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
}

func (x *ChatHistory) Reset() {
	*x = ChatHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistory) ProtoMessage() {}

func (x *ChatHistory) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistory.ProtoReflect.Descriptor instead.
func (*ChatHistory) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{2}
}

func (x *ChatHistory) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *ChatHistory) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatHistory) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ChatHistory) GetMessageId() int64 {
	if x != nil {
		return x.MessageId
	}
	return 0
}

func (x *ChatHistory) GetIsRated() bool {
	if x != nil {
		return x.IsRated
	}
	return false
}

func (x *ChatHistory) GetRateScore() int32 {
	if x != nil {
		return x.RateScore
	}
	return 0
}

func (x *ChatHistory) GetAdditionalData() *ChatHistoryAdditionalData {
	if x != nil {
		return x.AdditionalData
	}
	return nil
}

func (x *ChatHistory) GetChatType() uint32 {
	if x != nil {
		return x.ChatType
	}
	return 0
}

func (x *ChatHistory) GetParams() string {
	if x != nil {
		return x.Params
	}
	return ""
}

func (x *ChatHistory) GetContext() string {
	if x != nil {
		return x.Context
	}
	return ""
}

func (x *ChatHistory) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *ChatHistory) GetChatId() string {
	if x != nil {
		return x.ChatId
	}
	return ""
}

type ChatHistoryAdditionalData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	References  string                  `protobuf:"bytes,1,opt,name=references,proto3" json:"references,omitempty"`
	PlotlyGraph string                  `protobuf:"bytes,2,opt,name=plotly_graph,json=plotlyGraph,proto3" json:"plotly_graph,omitempty"`
	Documents   []*ChatHistoryDocuments `protobuf:"bytes,3,rep,name=documents,proto3" json:"documents,omitempty"`
}

func (x *ChatHistoryAdditionalData) Reset() {
	*x = ChatHistoryAdditionalData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistoryAdditionalData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryAdditionalData) ProtoMessage() {}

func (x *ChatHistoryAdditionalData) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryAdditionalData.ProtoReflect.Descriptor instead.
func (*ChatHistoryAdditionalData) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{3}
}

func (x *ChatHistoryAdditionalData) GetReferences() string {
	if x != nil {
		return x.References
	}
	return ""
}

func (x *ChatHistoryAdditionalData) GetPlotlyGraph() string {
	if x != nil {
		return x.PlotlyGraph
	}
	return ""
}

func (x *ChatHistoryAdditionalData) GetDocuments() []*ChatHistoryDocuments {
	if x != nil {
		return x.Documents
	}
	return nil
}

type ChatHistoryDocuments struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title      string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`                              // 标题
	Name       string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                // 文件名
	DocId      string `protobuf:"bytes,3,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`                 // doc id
	Type       string `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`                                // 文件类型
	S3Bucket   string `protobuf:"bytes,5,opt,name=s3_bucket,json=s3Bucket,proto3" json:"s3_bucket,omitempty"`        // bucket
	S3Path     string `protobuf:"bytes,6,opt,name=s3_path,json=s3Path,proto3" json:"s3_path,omitempty"`              // s3路径
	Language   string `protobuf:"bytes,7,opt,name=language,proto3" json:"language,omitempty"`                        // 语言
	TotalPages int32  `protobuf:"varint,8,opt,name=total_pages,json=totalPages,proto3" json:"total_pages,omitempty"` // 总的页数
	Url        string `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`                                  // url
}

func (x *ChatHistoryDocuments) Reset() {
	*x = ChatHistoryDocuments{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChatHistoryDocuments) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChatHistoryDocuments) ProtoMessage() {}

func (x *ChatHistoryDocuments) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChatHistoryDocuments.ProtoReflect.Descriptor instead.
func (*ChatHistoryDocuments) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{4}
}

func (x *ChatHistoryDocuments) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *ChatHistoryDocuments) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ChatHistoryDocuments) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *ChatHistoryDocuments) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ChatHistoryDocuments) GetS3Bucket() string {
	if x != nil {
		return x.S3Bucket
	}
	return ""
}

func (x *ChatHistoryDocuments) GetS3Path() string {
	if x != nil {
		return x.S3Path
	}
	return ""
}

func (x *ChatHistoryDocuments) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ChatHistoryDocuments) GetTotalPages() int32 {
	if x != nil {
		return x.TotalPages
	}
	return 0
}

func (x *ChatHistoryDocuments) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

type GetDocInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetDocInfoReq) Reset() {
	*x = GetDocInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocInfoReq) ProtoMessage() {}

func (x *GetDocInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocInfoReq.ProtoReflect.Descriptor instead.
func (*GetDocInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{5}
}

func (x *GetDocInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetDocInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type GetDocInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
	List []*ChatHistory `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetDocInfoRsp) Reset() {
	*x = GetDocInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetDocInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocInfoRsp) ProtoMessage() {}

func (x *GetDocInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocInfoRsp.ProtoReflect.Descriptor instead.
func (*GetDocInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{6}
}

func (x *GetDocInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetDocInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetDocInfoRsp) GetList() []*ChatHistory {
	if x != nil {
		return x.List
	}
	return nil
}

type AudioInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId      string          `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`                   // session id
	DocId          string          `protobuf:"bytes,2,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`                               // 文件id
	Content        []*MediaContent `protobuf:"bytes,3,rep,name=content,proto3" json:"content,omitempty"`                                        // 内容
	Summary        string          `protobuf:"bytes,4,opt,name=summary,proto3" json:"summary,omitempty"`                                        // 总结
	PartialSummary []*MediaSummary `protobuf:"bytes,5,rep,name=partial_summary,json=partialSummary,proto3" json:"partial_summary,omitempty"`    // 部分内容
	Todo           []string        `protobuf:"bytes,6,rep,name=todo,proto3" json:"todo,omitempty"`                                              // 待办事项
	IsDepthSummary bool            `protobuf:"varint,7,opt,name=is_depth_summary,json=isDepthSummary,proto3" json:"is_depth_summary,omitempty"` // 是否有深度总结
	DepthSummary   string          `protobuf:"bytes,8,opt,name=depth_summary,json=depthSummary,proto3" json:"depth_summary,omitempty"`          // 深度总结
	Url            string          `protobuf:"bytes,9,opt,name=url,proto3" json:"url,omitempty"`                                                // 链接地址
	MediaType      uint32          `protobuf:"varint,10,opt,name=media_type,json=mediaType,proto3" json:"media_type,omitempty"`                 // 媒体类型
	Notes          string          `protobuf:"bytes,11,opt,name=notes,proto3" json:"notes,omitempty"`                                           // 笔记
	IsPublic       bool            `protobuf:"varint,12,opt,name=is_public,json=isPublic,proto3" json:"is_public,omitempty"`                    // 是否公开
	NotesTitle     string          `protobuf:"bytes,13,opt,name=notes_title,json=notesTitle,proto3" json:"notes_title,omitempty"`               // 笔记标题
}

func (x *AudioInfo) Reset() {
	*x = AudioInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AudioInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AudioInfo) ProtoMessage() {}

func (x *AudioInfo) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AudioInfo.ProtoReflect.Descriptor instead.
func (*AudioInfo) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{7}
}

func (x *AudioInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *AudioInfo) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *AudioInfo) GetContent() []*MediaContent {
	if x != nil {
		return x.Content
	}
	return nil
}

func (x *AudioInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *AudioInfo) GetPartialSummary() []*MediaSummary {
	if x != nil {
		return x.PartialSummary
	}
	return nil
}

func (x *AudioInfo) GetTodo() []string {
	if x != nil {
		return x.Todo
	}
	return nil
}

func (x *AudioInfo) GetIsDepthSummary() bool {
	if x != nil {
		return x.IsDepthSummary
	}
	return false
}

func (x *AudioInfo) GetDepthSummary() string {
	if x != nil {
		return x.DepthSummary
	}
	return ""
}

func (x *AudioInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *AudioInfo) GetMediaType() uint32 {
	if x != nil {
		return x.MediaType
	}
	return 0
}

func (x *AudioInfo) GetNotes() string {
	if x != nil {
		return x.Notes
	}
	return ""
}

func (x *AudioInfo) GetIsPublic() bool {
	if x != nil {
		return x.IsPublic
	}
	return false
}

func (x *AudioInfo) GetNotesTitle() string {
	if x != nil {
		return x.NotesTitle
	}
	return ""
}

type MediaContent struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start    string  `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Text     string  `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	Duration float64 `protobuf:"fixed64,3,opt,name=duration,proto3" json:"duration,omitempty"`
	Role     string  `protobuf:"bytes,4,opt,name=role,proto3" json:"role,omitempty"`
}

func (x *MediaContent) Reset() {
	*x = MediaContent{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaContent) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaContent) ProtoMessage() {}

func (x *MediaContent) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaContent.ProtoReflect.Descriptor instead.
func (*MediaContent) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{8}
}

func (x *MediaContent) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *MediaContent) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *MediaContent) GetDuration() float64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *MediaContent) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

type MediaSummary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Start string `protobuf:"bytes,1,opt,name=start,proto3" json:"start,omitempty"`
	Text  string `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
}

func (x *MediaSummary) Reset() {
	*x = MediaSummary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MediaSummary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MediaSummary) ProtoMessage() {}

func (x *MediaSummary) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MediaSummary.ProtoReflect.Descriptor instead.
func (*MediaSummary) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{9}
}

func (x *MediaSummary) GetStart() string {
	if x != nil {
		return x.Start
	}
	return ""
}

func (x *MediaSummary) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type GetAudioInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *GetAudioInfoReq) Reset() {
	*x = GetAudioInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAudioInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioInfoReq) ProtoMessage() {}

func (x *GetAudioInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioInfoReq.ProtoReflect.Descriptor instead.
func (*GetAudioInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{10}
}

func (x *GetAudioInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type GetAudioInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32      `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`  // 错误码
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`   // msg
	Data *AudioInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // 数据
}

func (x *GetAudioInfoRsp) Reset() {
	*x = GetAudioInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAudioInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioInfoRsp) ProtoMessage() {}

func (x *GetAudioInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioInfoRsp.ProtoReflect.Descriptor instead.
func (*GetAudioInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{11}
}

func (x *GetAudioInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetAudioInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAudioInfoRsp) GetData() *AudioInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type GetAudioChatInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetAudioChatInfoReq) Reset() {
	*x = GetAudioChatInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAudioChatInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioChatInfoReq) ProtoMessage() {}

func (x *GetAudioChatInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioChatInfoReq.ProtoReflect.Descriptor instead.
func (*GetAudioChatInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{12}
}

func (x *GetAudioChatInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetAudioChatInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type GetAudioChatInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
	List []*ChatHistory `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetAudioChatInfoRsp) Reset() {
	*x = GetAudioChatInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAudioChatInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAudioChatInfoRsp) ProtoMessage() {}

func (x *GetAudioChatInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAudioChatInfoRsp.ProtoReflect.Descriptor instead.
func (*GetAudioChatInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{13}
}

func (x *GetAudioChatInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetAudioChatInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetAudioChatInfoRsp) GetList() []*ChatHistory {
	if x != nil {
		return x.List
	}
	return nil
}

type GetVideoChatInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
}

func (x *GetVideoChatInfoReq) Reset() {
	*x = GetVideoChatInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoChatInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoChatInfoReq) ProtoMessage() {}

func (x *GetVideoChatInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoChatInfoReq.ProtoReflect.Descriptor instead.
func (*GetVideoChatInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{14}
}

func (x *GetVideoChatInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetVideoChatInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

type GetVideoChatInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg  string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
	List []*ChatHistory `protobuf:"bytes,3,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetVideoChatInfoRsp) Reset() {
	*x = GetVideoChatInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoChatInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoChatInfoRsp) ProtoMessage() {}

func (x *GetVideoChatInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoChatInfoRsp.ProtoReflect.Descriptor instead.
func (*GetVideoChatInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{15}
}

func (x *GetVideoChatInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetVideoChatInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVideoChatInfoRsp) GetList() []*ChatHistory {
	if x != nil {
		return x.List
	}
	return nil
}

type VideoInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SessionId   string `protobuf:"bytes,1,opt,name=session_id,json=sessionId,proto3" json:"session_id,omitempty"`       // Corresponds to session_id in the table
	UserId      string `protobuf:"bytes,2,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                // Corresponds to user_id in the table
	Url         string `protobuf:"bytes,3,opt,name=url,proto3" json:"url,omitempty"`                                    // Corresponds to url in the table
	DocId       string `protobuf:"bytes,4,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`                   // Corresponds to doc_id in the table
	Subtitles   string `protobuf:"bytes,5,opt,name=subtitles,proto3" json:"subtitles,omitempty"`                        // Subtitles (JSON string)
	Summary     string `protobuf:"bytes,6,opt,name=summary,proto3" json:"summary,omitempty"`                            // Corresponds to summary in the table
	DeepSummary string `protobuf:"bytes,7,opt,name=deep_summary,json=deepSummary,proto3" json:"deep_summary,omitempty"` // Corresponds to deep_summary in the table
	Thumbnail   string `protobuf:"bytes,8,opt,name=thumbnail,proto3" json:"thumbnail,omitempty"`                        // Corresponds to thumbnail in the table
	CreatedAt   string `protobuf:"bytes,9,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`       // Timestamp as string, corresponds to created_at
	UpdatedAt   string `protobuf:"bytes,10,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`      // Timestamp as string, corresponds to updated_at
	DeletedAt   string `protobuf:"bytes,11,opt,name=deleted_at,json=deletedAt,proto3" json:"deleted_at,omitempty"`      // Timestamp as string, corresponds to deleted_at
	Title       string `protobuf:"bytes,12,opt,name=title,proto3" json:"title,omitempty"`                               // ... other fields as needed
}

func (x *VideoInfo) Reset() {
	*x = VideoInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VideoInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VideoInfo) ProtoMessage() {}

func (x *VideoInfo) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VideoInfo.ProtoReflect.Descriptor instead.
func (*VideoInfo) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{16}
}

func (x *VideoInfo) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *VideoInfo) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *VideoInfo) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *VideoInfo) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *VideoInfo) GetSubtitles() string {
	if x != nil {
		return x.Subtitles
	}
	return ""
}

func (x *VideoInfo) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *VideoInfo) GetDeepSummary() string {
	if x != nil {
		return x.DeepSummary
	}
	return ""
}

func (x *VideoInfo) GetThumbnail() string {
	if x != nil {
		return x.Thumbnail
	}
	return ""
}

func (x *VideoInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *VideoInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

func (x *VideoInfo) GetDeletedAt() string {
	if x != nil {
		return x.DeletedAt
	}
	return ""
}

func (x *VideoInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

type GetVideoInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"` // session id or other relevant fields
}

func (x *GetVideoInfoReq) Reset() {
	*x = GetVideoInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoReq) ProtoMessage() {}

func (x *GetVideoInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoReq.ProtoReflect.Descriptor instead.
func (*GetVideoInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{17}
}

func (x *GetVideoInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type GetVideoInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret  int32      `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`  // Error code
	Msg  string     `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`   // Message
	Data *VideoInfo `protobuf:"bytes,3,opt,name=data,proto3" json:"data,omitempty"` // Video information
}

func (x *GetVideoInfoRsp) Reset() {
	*x = GetVideoInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetVideoInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetVideoInfoRsp) ProtoMessage() {}

func (x *GetVideoInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetVideoInfoRsp.ProtoReflect.Descriptor instead.
func (*GetVideoInfoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{18}
}

func (x *GetVideoInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetVideoInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetVideoInfoRsp) GetData() *VideoInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

type ShareVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"` // session id or other relevant fields
}

func (x *ShareVideoReq) Reset() {
	*x = ShareVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareVideoReq) ProtoMessage() {}

func (x *ShareVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareVideoReq.ProtoReflect.Descriptor instead.
func (*ShareVideoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{19}
}

func (x *ShareVideoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type ShareVideoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // Error code
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // Message
}

func (x *ShareVideoRsp) Reset() {
	*x = ShareVideoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareVideoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareVideoRsp) ProtoMessage() {}

func (x *ShareVideoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareVideoRsp.ProtoReflect.Descriptor instead.
func (*ShareVideoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{20}
}

func (x *ShareVideoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ShareVideoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UnshareVideoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"` // session id or other relevant fields
}

func (x *UnshareVideoReq) Reset() {
	*x = UnshareVideoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareVideoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareVideoReq) ProtoMessage() {}

func (x *UnshareVideoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareVideoReq.ProtoReflect.Descriptor instead.
func (*UnshareVideoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{21}
}

func (x *UnshareVideoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type UnshareVideoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // Error code
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // Message
}

func (x *UnshareVideoRsp) Reset() {
	*x = UnshareVideoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareVideoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareVideoRsp) ProtoMessage() {}

func (x *UnshareVideoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareVideoRsp.ProtoReflect.Descriptor instead.
func (*UnshareVideoRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{22}
}

func (x *UnshareVideoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *UnshareVideoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ShareChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ShareChatReq) Reset() {
	*x = ShareChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareChatReq) ProtoMessage() {}

func (x *ShareChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareChatReq.ProtoReflect.Descriptor instead.
func (*ShareChatReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{23}
}

func (x *ShareChatReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type ShareChatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *ShareChatRsp) Reset() {
	*x = ShareChatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareChatRsp) ProtoMessage() {}

func (x *ShareChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareChatRsp.ProtoReflect.Descriptor instead.
func (*ShareChatRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{24}
}

func (x *ShareChatRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ShareChatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UnshareChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *UnshareChatReq) Reset() {
	*x = UnshareChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareChatReq) ProtoMessage() {}

func (x *UnshareChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareChatReq.ProtoReflect.Descriptor instead.
func (*UnshareChatReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{25}
}

func (x *UnshareChatReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type UnshareChatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *UnshareChatRsp) Reset() {
	*x = UnshareChatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareChatRsp) ProtoMessage() {}

func (x *UnshareChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareChatRsp.ProtoReflect.Descriptor instead.
func (*UnshareChatRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{26}
}

func (x *UnshareChatRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *UnshareChatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type ShareDocReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ShareDocReq) Reset() {
	*x = ShareDocReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDocReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDocReq) ProtoMessage() {}

func (x *ShareDocReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDocReq.ProtoReflect.Descriptor instead.
func (*ShareDocReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{27}
}

func (x *ShareDocReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type ShareDocRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *ShareDocRsp) Reset() {
	*x = ShareDocRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareDocRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareDocRsp) ProtoMessage() {}

func (x *ShareDocRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareDocRsp.ProtoReflect.Descriptor instead.
func (*ShareDocRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{28}
}

func (x *ShareDocRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ShareDocRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UnshareDocReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *UnshareDocReq) Reset() {
	*x = UnshareDocReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareDocReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareDocReq) ProtoMessage() {}

func (x *UnshareDocReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareDocReq.ProtoReflect.Descriptor instead.
func (*UnshareDocReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{29}
}

func (x *UnshareDocReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type UnshareDocRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *UnshareDocRsp) Reset() {
	*x = UnshareDocRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareDocRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareDocRsp) ProtoMessage() {}

func (x *UnshareDocRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareDocRsp.ProtoReflect.Descriptor instead.
func (*UnshareDocRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{30}
}

func (x *UnshareDocRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *UnshareDocRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckShareChatReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CheckShareChatReq) Reset() {
	*x = CheckShareChatReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckShareChatReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckShareChatReq) ProtoMessage() {}

func (x *CheckShareChatReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckShareChatReq.ProtoReflect.Descriptor instead.
func (*CheckShareChatReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{31}
}

func (x *CheckShareChatReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type CheckShareChatRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`                        // 错误码
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                         // msg
	IsShare bool   `protobuf:"varint,3,opt,name=is_share,json=isShare,proto3" json:"is_share,omitempty"` //
}

func (x *CheckShareChatRsp) Reset() {
	*x = CheckShareChatRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckShareChatRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckShareChatRsp) ProtoMessage() {}

func (x *CheckShareChatRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckShareChatRsp.ProtoReflect.Descriptor instead.
func (*CheckShareChatRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{32}
}

func (x *CheckShareChatRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CheckShareChatRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckShareChatRsp) GetIsShare() bool {
	if x != nil {
		return x.IsShare
	}
	return false
}

type CheckShareDocReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CheckShareDocReq) Reset() {
	*x = CheckShareDocReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckShareDocReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckShareDocReq) ProtoMessage() {}

func (x *CheckShareDocReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckShareDocReq.ProtoReflect.Descriptor instead.
func (*CheckShareDocReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{33}
}

func (x *CheckShareDocReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type CheckShareDocRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`                        // 错误码
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                         // msg
	IsShare bool   `protobuf:"varint,3,opt,name=is_share,json=isShare,proto3" json:"is_share,omitempty"` //
}

func (x *CheckShareDocRsp) Reset() {
	*x = CheckShareDocRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckShareDocRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckShareDocRsp) ProtoMessage() {}

func (x *CheckShareDocRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckShareDocRsp.ProtoReflect.Descriptor instead.
func (*CheckShareDocRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{34}
}

func (x *CheckShareDocRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CheckShareDocRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckShareDocRsp) GetIsShare() bool {
	if x != nil {
		return x.IsShare
	}
	return false
}

type ShareAudioReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *ShareAudioReq) Reset() {
	*x = ShareAudioReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareAudioReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareAudioReq) ProtoMessage() {}

func (x *ShareAudioReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareAudioReq.ProtoReflect.Descriptor instead.
func (*ShareAudioReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{35}
}

func (x *ShareAudioReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type ShareAudioRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *ShareAudioRsp) Reset() {
	*x = ShareAudioRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ShareAudioRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ShareAudioRsp) ProtoMessage() {}

func (x *ShareAudioRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ShareAudioRsp.ProtoReflect.Descriptor instead.
func (*ShareAudioRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{36}
}

func (x *ShareAudioRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *ShareAudioRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type UnshareAudioReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *UnshareAudioReq) Reset() {
	*x = UnshareAudioReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareAudioReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareAudioReq) ProtoMessage() {}

func (x *UnshareAudioReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareAudioReq.ProtoReflect.Descriptor instead.
func (*UnshareAudioReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{37}
}

func (x *UnshareAudioReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type UnshareAudioRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"` // 错误码
	Msg string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`  // msg
}

func (x *UnshareAudioRsp) Reset() {
	*x = UnshareAudioRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UnshareAudioRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnshareAudioRsp) ProtoMessage() {}

func (x *UnshareAudioRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnshareAudioRsp.ProtoReflect.Descriptor instead.
func (*UnshareAudioRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{38}
}

func (x *UnshareAudioRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *UnshareAudioRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

type CheckAudioReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
}

func (x *CheckAudioReq) Reset() {
	*x = CheckAudioReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAudioReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAudioReq) ProtoMessage() {}

func (x *CheckAudioReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAudioReq.ProtoReflect.Descriptor instead.
func (*CheckAudioReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{39}
}

func (x *CheckAudioReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

type CheckAudioRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32  `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`                        // 错误码
	Msg     string `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`                         // msg
	IsShare bool   `protobuf:"varint,3,opt,name=is_share,json=isShare,proto3" json:"is_share,omitempty"` //
}

func (x *CheckAudioRsp) Reset() {
	*x = CheckAudioRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CheckAudioRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckAudioRsp) ProtoMessage() {}

func (x *CheckAudioRsp) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckAudioRsp.ProtoReflect.Descriptor instead.
func (*CheckAudioRsp) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{40}
}

func (x *CheckAudioRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *CheckAudioRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *CheckAudioRsp) GetIsShare() bool {
	if x != nil {
		return x.IsShare
	}
	return false
}

type GetCompanyInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid  int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 公司code 例如00030.SZ
}

func (x *GetCompanyInfoReq) Reset() {
	*x = GetCompanyInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetCompanyInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCompanyInfoReq) ProtoMessage() {}

func (x *GetCompanyInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCompanyInfoReq.ProtoReflect.Descriptor instead.
func (*GetCompanyInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{41}
}

func (x *GetCompanyInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetCompanyInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetCompanyInfoReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetIndicatorsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid  int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 公司code 例如00030.SZ
}

func (x *GetIndicatorsReq) Reset() {
	*x = GetIndicatorsReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetIndicatorsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetIndicatorsReq) ProtoMessage() {}

func (x *GetIndicatorsReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetIndicatorsReq.ProtoReflect.Descriptor instead.
func (*GetIndicatorsReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{42}
}

func (x *GetIndicatorsReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetIndicatorsReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetIndicatorsReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetShareholdersReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid  int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 公司code 例如00030.SZ
}

func (x *GetShareholdersReq) Reset() {
	*x = GetShareholdersReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetShareholdersReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetShareholdersReq) ProtoMessage() {}

func (x *GetShareholdersReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetShareholdersReq.ProtoReflect.Descriptor instead.
func (*GetShareholdersReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{43}
}

func (x *GetShareholdersReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetShareholdersReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetShareholdersReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetExecutivesReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid  string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid  int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Code string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"` // 公司code 例如00030.SZ
}

func (x *GetExecutivesReq) Reset() {
	*x = GetExecutivesReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetExecutivesReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetExecutivesReq) ProtoMessage() {}

func (x *GetExecutivesReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetExecutivesReq.ProtoReflect.Descriptor instead.
func (*GetExecutivesReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{44}
}

func (x *GetExecutivesReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetExecutivesReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetExecutivesReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetStaffInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid   int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Stype uint32 `protobuf:"varint,3,opt,name=stype,proto3" json:"stype,omitempty"` // 3=近三年 5=近五年 10=近十年  999=上市以来
	Code  string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`    // 公司code 例如00030.SZ
}

func (x *GetStaffInfoReq) Reset() {
	*x = GetStaffInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStaffInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStaffInfoReq) ProtoMessage() {}

func (x *GetStaffInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStaffInfoReq.ProtoReflect.Descriptor instead.
func (*GetStaffInfoReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{45}
}

func (x *GetStaffInfoReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetStaffInfoReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetStaffInfoReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetStaffInfoReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

type GetMBRevenueReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid    string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid    int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Stype  uint32 `protobuf:"varint,3,opt,name=stype,proto3" json:"stype,omitempty"`   // 3=近三年 5=近五年 10=近十年  999=上市以来
	Mbtype uint32 `protobuf:"varint,4,opt,name=mbtype,proto3" json:"mbtype,omitempty"` // 类型 1=行业 2=产品 3=地区
	Code   string `protobuf:"bytes,5,opt,name=code,proto3" json:"code,omitempty"`      // 公司code 例如00030.SZ
	Unit   uint32 `protobuf:"varint,6,opt,name=unit,proto3" json:"unit,omitempty"`     // 单位 0=元 1=千元 2=万元 3=百万元 4=亿元 5=十亿元
}

func (x *GetMBRevenueReq) Reset() {
	*x = GetMBRevenueReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetMBRevenueReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetMBRevenueReq) ProtoMessage() {}

func (x *GetMBRevenueReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetMBRevenueReq.ProtoReflect.Descriptor instead.
func (*GetMBRevenueReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{46}
}

func (x *GetMBRevenueReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetMBRevenueReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetMBRevenueReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetMBRevenueReq) GetMbtype() uint32 {
	if x != nil {
		return x.Mbtype
	}
	return 0
}

func (x *GetMBRevenueReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetMBRevenueReq) GetUnit() uint32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

type GetFinancialReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid   int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Stype uint32 `protobuf:"varint,3,opt,name=stype,proto3" json:"stype,omitempty"` // 3=近三年 5=近五年 10=近十年  999=上市以来
	Code  string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`    // 公司code 例如00030.SZ
	Unit  uint32 `protobuf:"varint,5,opt,name=unit,proto3" json:"unit,omitempty"`   // 单位 0=元 1=千元 2=万元 3=百万元 4=亿元 5=十亿元
}

func (x *GetFinancialReq) Reset() {
	*x = GetFinancialReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetFinancialReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetFinancialReq) ProtoMessage() {}

func (x *GetFinancialReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetFinancialReq.ProtoReflect.Descriptor instead.
func (*GetFinancialReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{47}
}

func (x *GetFinancialReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetFinancialReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetFinancialReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetFinancialReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetFinancialReq) GetUnit() uint32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

type GetAccountsReceivableReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid   int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Code  string `protobuf:"bytes,3,opt,name=code,proto3" json:"code,omitempty"`    // 公司code 例如00030.SZ
	Stype uint32 `protobuf:"varint,4,opt,name=stype,proto3" json:"stype,omitempty"` // 3=近三年 5=近五年 10=近十年  999=上市以来
	Unit  uint32 `protobuf:"varint,5,opt,name=unit,proto3" json:"unit,omitempty"`   // 单位 0=元 1=千元 2=万元 3=百万元 4=亿元 5=十亿元
}

func (x *GetAccountsReceivableReq) Reset() {
	*x = GetAccountsReceivableReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetAccountsReceivableReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAccountsReceivableReq) ProtoMessage() {}

func (x *GetAccountsReceivableReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAccountsReceivableReq.ProtoReflect.Descriptor instead.
func (*GetAccountsReceivableReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{48}
}

func (x *GetAccountsReceivableReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetAccountsReceivableReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetAccountsReceivableReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetAccountsReceivableReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetAccountsReceivableReq) GetUnit() uint32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

type GetRdExpenditureReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid   string `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid   int32  `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	Stype uint32 `protobuf:"varint,3,opt,name=stype,proto3" json:"stype,omitempty"` // 3=近三年 5=近五年 10=近十年  999=上市以来
	Code  string `protobuf:"bytes,4,opt,name=code,proto3" json:"code,omitempty"`    // 公司code 例如00030.SZ
	Unit  uint32 `protobuf:"varint,5,opt,name=unit,proto3" json:"unit,omitempty"`   // 单位 0=元 1=千元 2=万元 3=百万元 4=亿元 5=十亿元
}

func (x *GetRdExpenditureReq) Reset() {
	*x = GetRdExpenditureReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetRdExpenditureReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetRdExpenditureReq) ProtoMessage() {}

func (x *GetRdExpenditureReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetRdExpenditureReq.ProtoReflect.Descriptor instead.
func (*GetRdExpenditureReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{49}
}

func (x *GetRdExpenditureReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetRdExpenditureReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetRdExpenditureReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetRdExpenditureReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetRdExpenditureReq) GetUnit() uint32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

type GetStockReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Sid       string       `protobuf:"bytes,1,opt,name=sid,proto3" json:"sid,omitempty"`
	Mid       int32        `protobuf:"varint,2,opt,name=mid,proto3" json:"mid,omitempty"`
	StockType v1.StockType `protobuf:"varint,3,opt,name=stock_type,json=stockType,proto3,enum=chatfinbot.search.v1.StockType" json:"stock_type,omitempty"` //类型
	Lang      string       `protobuf:"bytes,4,opt,name=lang,proto3" json:"lang,omitempty"`                                                                 // 语言
	Stype     uint32       `protobuf:"varint,5,opt,name=stype,proto3" json:"stype,omitempty"`                                                              // 3=近三年 5=近五年 10=近十年  999=上市以来
	Code      string       `protobuf:"bytes,6,opt,name=code,proto3" json:"code,omitempty"`                                                                 // 公司code 例如00030.SZ
	Unit      uint32       `protobuf:"varint,7,opt,name=unit,proto3" json:"unit,omitempty"`                                                                // 单位 0=元 1=千元 2=万元 3=百万元 4=亿元 5=十亿元
}

func (x *GetStockReq) Reset() {
	*x = GetStockReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_share_v1_share_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetStockReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStockReq) ProtoMessage() {}

func (x *GetStockReq) ProtoReflect() protoreflect.Message {
	mi := &file_share_v1_share_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStockReq.ProtoReflect.Descriptor instead.
func (*GetStockReq) Descriptor() ([]byte, []int) {
	return file_share_v1_share_proto_rawDescGZIP(), []int{50}
}

func (x *GetStockReq) GetSid() string {
	if x != nil {
		return x.Sid
	}
	return ""
}

func (x *GetStockReq) GetMid() int32 {
	if x != nil {
		return x.Mid
	}
	return 0
}

func (x *GetStockReq) GetStockType() v1.StockType {
	if x != nil {
		return x.StockType
	}
	return v1.StockType(0)
}

func (x *GetStockReq) GetLang() string {
	if x != nil {
		return x.Lang
	}
	return ""
}

func (x *GetStockReq) GetStype() uint32 {
	if x != nil {
		return x.Stype
	}
	return 0
}

func (x *GetStockReq) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *GetStockReq) GetUnit() uint32 {
	if x != nil {
		return x.Unit
	}
	return 0
}

var File_share_v1_share_proto protoreflect.FileDescriptor

var file_share_v1_share_proto_rawDesc = []byte{
	0x0a, 0x14, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x13, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x34, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x6a, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x81, 0x03, 0x0a, 0x0b, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6d,
	0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65,
	0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6d, 0x65, 0x73, 0x73, 0x61,
	0x67, 0x65, 0x49, 0x64, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12,
	0x1d, 0x0a, 0x0a, 0x72, 0x61, 0x74, 0x65, 0x5f, 0x73, 0x63, 0x6f, 0x72, 0x65, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x09, 0x72, 0x61, 0x74, 0x65, 0x53, 0x63, 0x6f, 0x72, 0x65, 0x12, 0x57,
	0x0a, 0x0f, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x5f, 0x64, 0x61, 0x74,
	0x61, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x2e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x61, 0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1b, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x74, 0x5f,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x08, 0x63, 0x68, 0x61, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x09,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x70, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x63, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x17,
	0x0a, 0x07, 0x63, 0x68, 0x61, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x63, 0x68, 0x61, 0x74, 0x49, 0x64, 0x22, 0xa7, 0x01, 0x0a, 0x19, 0x43, 0x68, 0x61, 0x74,
	0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x41, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61,
	0x6c, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72, 0x65, 0x6e,
	0x63, 0x65, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x66, 0x65, 0x72,
	0x65, 0x6e, 0x63, 0x65, 0x73, 0x12, 0x21, 0x0a, 0x0c, 0x70, 0x6c, 0x6f, 0x74, 0x6c, 0x79, 0x5f,
	0x67, 0x72, 0x61, 0x70, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x6c, 0x6f,
	0x74, 0x6c, 0x79, 0x47, 0x72, 0x61, 0x70, 0x68, 0x12, 0x47, 0x0a, 0x09, 0x64, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x29, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x52, 0x09, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x73, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72,
	0x79, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x73, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x1b, 0x0a, 0x09, 0x73, 0x33, 0x5f, 0x62, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x73, 0x33, 0x42, 0x75, 0x63, 0x6b, 0x65, 0x74, 0x12, 0x17, 0x0a, 0x07,
	0x73, 0x33, 0x5f, 0x70, 0x61, 0x74, 0x68, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73,
	0x33, 0x50, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67,
	0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x50, 0x61, 0x67,
	0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x75, 0x72, 0x6c, 0x22, 0x33, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x0d, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34,
	0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0xcc, 0x03, 0x0a, 0x09, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x3b, 0x0a, 0x07, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x07, 0x63, 0x6f,
	0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12,
	0x4a, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x74, 0x69, 0x61, 0x6c, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61,
	0x72, 0x79, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x4d,
	0x65, 0x64, 0x69, 0x61, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x74, 0x69, 0x61, 0x6c, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x74,
	0x6f, 0x64, 0x6f, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x04, 0x74, 0x6f, 0x64, 0x6f, 0x12,
	0x28, 0x0a, 0x10, 0x69, 0x73, 0x5f, 0x64, 0x65, 0x70, 0x74, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x6d,
	0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x73, 0x44, 0x65, 0x70,
	0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x23, 0x0a, 0x0d, 0x64, 0x65, 0x70,
	0x74, 0x68, 0x5f, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x64, 0x65, 0x70, 0x74, 0x68, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1d, 0x0a, 0x0a, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x09, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12,
	0x14, 0x0a, 0x05, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x73, 0x5f, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73, 0x50, 0x75, 0x62, 0x6c,
	0x69, 0x63, 0x12, 0x1f, 0x0a, 0x0b, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x5f, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6e, 0x6f, 0x74, 0x65, 0x73, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x22, 0x68, 0x0a, 0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x43, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01, 0x52,
	0x08, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x72, 0x6f, 0x6c,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x22, 0x38, 0x0a,
	0x0c, 0x4d, 0x65, 0x64, 0x69, 0x61, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x14, 0x0a,
	0x05, 0x73, 0x74, 0x61, 0x72, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x69, 0x0a, 0x0f,
	0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d,
	0x69, 0x64, 0x22, 0x6f, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d,
	0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a,
	0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x39, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x22, 0x6f,
	0x0a, 0x13, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x34, 0x0a, 0x04, 0x6c, 0x69, 0x73,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68,
	0x61, 0x74, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22,
	0xd8, 0x02, 0x0a, 0x09, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a,
	0x0a, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x12, 0x17, 0x0a, 0x07,
	0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x21, 0x0a, 0x0c, 0x64, 0x65, 0x65, 0x70, 0x5f, 0x73,
	0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65,
	0x65, 0x70, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x68, 0x75,
	0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x74, 0x68,
	0x75, 0x6d, 0x62, 0x6e, 0x61, 0x69, 0x6c, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65,
	0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x5f, 0x61, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1d, 0x0a, 0x0a, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x64,
	0x5f, 0x61, 0x74, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x64, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x64, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x23, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22,
	0x69, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x32, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x1e, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0x21, 0x0a, 0x0d, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x33, 0x0a,
	0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x23, 0x0a, 0x0f, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x64,
	0x65, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x55, 0x6e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x20,
	0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10,
	0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64,
	0x22, 0x32, 0x0a, 0x0c, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70,
	0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72,
	0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x22, 0x22, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x34, 0x0a, 0x0e, 0x55, 0x6e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x1f,
	0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22,
	0x31, 0x0a, 0x0b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x33, 0x0a, 0x0d, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x44, 0x6f, 0x63, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x25, 0x0a, 0x11, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x22, 0x52, 0x0a, 0x11, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43,
	0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x24, 0x0a, 0x10, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x51, 0x0a, 0x10, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73, 0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73, 0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x21,
	0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x12,
	0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69,
	0x64, 0x22, 0x33, 0x0a, 0x0d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52,
	0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x22, 0x23, 0x0a, 0x0f, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x35, 0x0a, 0x0f, 0x55,
	0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10,
	0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74,
	0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d,
	0x73, 0x67, 0x22, 0x21, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x22, 0x4e, 0x0a, 0x0d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75,
	0x64, 0x69, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x19, 0x0a, 0x08, 0x69, 0x73,
	0x5f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x69, 0x73,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x22, 0x4b, 0x0a, 0x11, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70,
	0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x22, 0x4a, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4c,
	0x0a, 0x12, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72,
	0x73, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x4a, 0x0a, 0x10,
	0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73,
	0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x5f, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a,
	0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05,
	0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x22, 0x8b, 0x01, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x4d, 0x42, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a,
	0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12,
	0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x62, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x06, 0x6d, 0x62, 0x74, 0x79, 0x70, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x73, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x46, 0x69,
	0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14,
	0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x7c, 0x0a, 0x18,
	0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69,
	0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x12, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65,
	0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x22, 0x77, 0x0a, 0x13, 0x47, 0x65,
	0x74, 0x52, 0x64, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x52, 0x65,
	0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x63,
	0x6f, 0x64, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x12,
	0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x75,
	0x6e, 0x69, 0x74, 0x22, 0xc3, 0x01, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b,
	0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x03, 0x73, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x03, 0x6d, 0x69, 0x64, 0x12, 0x3e, 0x0a, 0x0a, 0x73, 0x74, 0x6f, 0x63, 0x6b,
	0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1f, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x73, 0x74,
	0x6f, 0x63, 0x6b, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6c, 0x61, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x73,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x63, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0d, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x32, 0xac, 0x1a, 0x0a, 0x0c, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x72, 0x0a, 0x09, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x21, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x1f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x19, 0x3a, 0x01, 0x2a, 0x22, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x12, 0x7e,
	0x0a, 0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74,
	0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x12, 0x7a,
	0x0a, 0x0b, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x12, 0x23, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x43, 0x68, 0x61, 0x74, 0x52,
	0x65, 0x71, 0x1a, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x43, 0x68, 0x61, 0x74, 0x52, 0x73, 0x70, 0x22, 0x21, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1b, 0x3a,
	0x01, 0x2a, 0x22, 0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x75, 0x6e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x12, 0x74, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x23, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x23,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x2d, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x6e, 0x0a, 0x08, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x20, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x65, 0x71, 0x1a, 0x20,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x73, 0x70,
	0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a, 0x22, 0x13, 0x2f, 0x76, 0x31,
	0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x64, 0x6f, 0x63,
	0x12, 0x76, 0x0a, 0x0a, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x22,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x44, 0x6f, 0x63, 0x52, 0x73, 0x70, 0x22, 0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01,
	0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x75, 0x6e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2d, 0x64, 0x6f, 0x63, 0x12, 0x70, 0x0a, 0x0a, 0x47, 0x65, 0x74, 0x44,
	0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x44, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x44, 0x6f, 0x63, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x1a,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2f, 0x64, 0x6f, 0x63, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x7a, 0x0a, 0x0d, 0x43, 0x68,
	0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x12, 0x25, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68, 0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52,
	0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x44, 0x6f, 0x63, 0x52, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x2d, 0x64, 0x6f, 0x63, 0x12, 0x78, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x2d, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68, 0x61,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41,
	0x75, 0x64, 0x69, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a,
	0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02,
	0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x61, 0x75, 0x64,
	0x69, 0x6f, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x12, 0x76, 0x0a, 0x0a, 0x53, 0x68, 0x61, 0x72, 0x65,
	0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68, 0x61, 0x72,
	0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e,
	0x53, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x7e, 0x0a, 0x0c, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x22, 0x82, 0xd3, 0xe4,
	0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2f, 0x75, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x12,
	0x73, 0x0a, 0x0a, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x12, 0x22, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x64, 0x69, 0x6f, 0x52, 0x65,
	0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x41, 0x75, 0x64,
	0x69, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f,
	0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x2d, 0x61,
	0x75, 0x64, 0x69, 0x6f, 0x12, 0x78, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69,
	0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70,
	0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x2d, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x81,
	0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61,
	0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74,
	0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x43, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12, 0x16, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x2d, 0x69, 0x6e,
	0x66, 0x6f, 0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64,
	0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x26, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73, 0x52,
	0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x69, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x73,
	0x12, 0x84, 0x01, 0x0a, 0x0f, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x12, 0x27, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f,
	0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x52, 0x65, 0x71, 0x1a, 0x28, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x68, 0x61, 0x72, 0x65, 0x68, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x73, 0x52, 0x73, 0x70, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x12,
	0x16, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x68, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12, 0x7c, 0x0a, 0x0d, 0x47, 0x65, 0x74, 0x45, 0x78,
	0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74, 0x69, 0x76, 0x65, 0x73, 0x52, 0x65, 0x71, 0x1a,
	0x26, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x45, 0x78, 0x65, 0x63, 0x75, 0x74,
	0x69, 0x76, 0x65, 0x73, 0x52, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12,
	0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x65, 0x78, 0x65, 0x63, 0x75,
	0x74, 0x69, 0x76, 0x65, 0x73, 0x12, 0x79, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66,
	0x66, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53,
	0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e,
	0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x61, 0x66, 0x66, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x61, 0x66, 0x66, 0x2d, 0x69, 0x6e, 0x66, 0x6f,
	0x12, 0x78, 0x0a, 0x0c, 0x47, 0x65, 0x74, 0x4d, 0x42, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65,
	0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4d, 0x42, 0x52, 0x65, 0x76, 0x65,
	0x6e, 0x75, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4d, 0x42, 0x52, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x52, 0x73, 0x70, 0x22, 0x1b, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2f, 0x6d, 0x62, 0x72, 0x65, 0x76, 0x65, 0x6e, 0x75, 0x65, 0x12, 0x78, 0x0a, 0x0c, 0x47, 0x65,
	0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61,
	0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31,
	0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e, 0x63, 0x69, 0x61, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x25, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x46, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x52, 0x73, 0x70, 0x22, 0x1b, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x15, 0x12,
	0x13, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x66, 0x69, 0x6e, 0x61, 0x6e,
	0x63, 0x69, 0x61, 0x6c, 0x12, 0x8c, 0x01, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x2d,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72,
	0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x2e, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73,
	0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x73, 0x70, 0x22, 0x14, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x0e, 0x12, 0x0c, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2f, 0x61, 0x72, 0x12, 0x89, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x52, 0x64, 0x45, 0x78, 0x70,
	0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47,
	0x65, 0x74, 0x52, 0x64, 0x45, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x52,
	0x65, 0x71, 0x1a, 0x29, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x52, 0x64, 0x45,
	0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x52, 0x73, 0x70, 0x22, 0x20, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x12, 0x18, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65,
	0x2f, 0x72, 0x64, 0x2d, 0x65, 0x78, 0x70, 0x65, 0x6e, 0x64, 0x69, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x68, 0x0a, 0x08, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x20, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e,
	0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x53, 0x74, 0x6f, 0x63, 0x6b, 0x52, 0x73, 0x70,
	0x22, 0x17, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x11, 0x12, 0x0f, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x73, 0x74, 0x6f, 0x63, 0x6b, 0x12, 0x76, 0x0a, 0x0a, 0x53, 0x68, 0x61,
	0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x53, 0x68,
	0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68,
	0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76,
	0x31, 0x2e, 0x53, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x22,
	0x20, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1a, 0x3a, 0x01, 0x2a, 0x22, 0x15, 0x2f, 0x76, 0x31, 0x2f,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x7e, 0x0a, 0x0c, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73,
	0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x56,
	0x69, 0x64, 0x65, 0x6f, 0x52, 0x65, 0x71, 0x1a, 0x24, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69,
	0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x55, 0x6e,
	0x73, 0x68, 0x61, 0x72, 0x65, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x22, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x3a, 0x01, 0x2a, 0x22, 0x17, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2f, 0x75, 0x6e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2d, 0x76, 0x69, 0x64, 0x65,
	0x6f, 0x12, 0x84, 0x01, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68,
	0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e,
	0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74,
	0x56, 0x69, 0x64, 0x65, 0x6f, 0x43, 0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71,
	0x1a, 0x28, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x73, 0x68,
	0x61, 0x72, 0x65, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x56, 0x69, 0x64, 0x65, 0x6f, 0x43,
	0x68, 0x61, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x1c, 0x82, 0xd3, 0xe4, 0x93,
	0x02, 0x16, 0x12, 0x14, 0x2f, 0x76, 0x31, 0x2f, 0x73, 0x68, 0x61, 0x72, 0x65, 0x2f, 0x76, 0x69,
	0x64, 0x65, 0x6f, 0x2d, 0x63, 0x68, 0x61, 0x74, 0x42, 0x43, 0x5a, 0x41, 0x67, 0x69, 0x74, 0x68,
	0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x69, 0x6e, 0x74, 0x65, 0x6c, 0x6c, 0x65, 0x63, 0x74,
	0x69, 0x61, 0x2f, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2d, 0x67, 0x72,
	0x70, 0x63, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x73, 0x2f, 0x73, 0x68, 0x61,
	0x72, 0x65, 0x2f, 0x76, 0x31, 0x3b, 0x73, 0x68, 0x61, 0x72, 0x65, 0x70, 0x62, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_share_v1_share_proto_rawDescOnce sync.Once
	file_share_v1_share_proto_rawDescData = file_share_v1_share_proto_rawDesc
)

func file_share_v1_share_proto_rawDescGZIP() []byte {
	file_share_v1_share_proto_rawDescOnce.Do(func() {
		file_share_v1_share_proto_rawDescData = protoimpl.X.CompressGZIP(file_share_v1_share_proto_rawDescData)
	})
	return file_share_v1_share_proto_rawDescData
}

var file_share_v1_share_proto_msgTypes = make([]protoimpl.MessageInfo, 51)
var file_share_v1_share_proto_goTypes = []interface{}{
	(*GetChatInfoReq)(nil),              // 0: chatfinbot.share.v1.GetChatInfoReq
	(*GetChatInfoRsp)(nil),              // 1: chatfinbot.share.v1.GetChatInfoRsp
	(*ChatHistory)(nil),                 // 2: chatfinbot.share.v1.ChatHistory
	(*ChatHistoryAdditionalData)(nil),   // 3: chatfinbot.share.v1.ChatHistoryAdditionalData
	(*ChatHistoryDocuments)(nil),        // 4: chatfinbot.share.v1.ChatHistoryDocuments
	(*GetDocInfoReq)(nil),               // 5: chatfinbot.share.v1.GetDocInfoReq
	(*GetDocInfoRsp)(nil),               // 6: chatfinbot.share.v1.GetDocInfoRsp
	(*AudioInfo)(nil),                   // 7: chatfinbot.share.v1.AudioInfo
	(*MediaContent)(nil),                // 8: chatfinbot.share.v1.MediaContent
	(*MediaSummary)(nil),                // 9: chatfinbot.share.v1.MediaSummary
	(*GetAudioInfoReq)(nil),             // 10: chatfinbot.share.v1.GetAudioInfoReq
	(*GetAudioInfoRsp)(nil),             // 11: chatfinbot.share.v1.GetAudioInfoRsp
	(*GetAudioChatInfoReq)(nil),         // 12: chatfinbot.share.v1.GetAudioChatInfoReq
	(*GetAudioChatInfoRsp)(nil),         // 13: chatfinbot.share.v1.GetAudioChatInfoRsp
	(*GetVideoChatInfoReq)(nil),         // 14: chatfinbot.share.v1.GetVideoChatInfoReq
	(*GetVideoChatInfoRsp)(nil),         // 15: chatfinbot.share.v1.GetVideoChatInfoRsp
	(*VideoInfo)(nil),                   // 16: chatfinbot.share.v1.VideoInfo
	(*GetVideoInfoReq)(nil),             // 17: chatfinbot.share.v1.GetVideoInfoReq
	(*GetVideoInfoRsp)(nil),             // 18: chatfinbot.share.v1.GetVideoInfoRsp
	(*ShareVideoReq)(nil),               // 19: chatfinbot.share.v1.ShareVideoReq
	(*ShareVideoRsp)(nil),               // 20: chatfinbot.share.v1.ShareVideoRsp
	(*UnshareVideoReq)(nil),             // 21: chatfinbot.share.v1.UnshareVideoReq
	(*UnshareVideoRsp)(nil),             // 22: chatfinbot.share.v1.UnshareVideoRsp
	(*ShareChatReq)(nil),                // 23: chatfinbot.share.v1.ShareChatReq
	(*ShareChatRsp)(nil),                // 24: chatfinbot.share.v1.ShareChatRsp
	(*UnshareChatReq)(nil),              // 25: chatfinbot.share.v1.UnshareChatReq
	(*UnshareChatRsp)(nil),              // 26: chatfinbot.share.v1.UnshareChatRsp
	(*ShareDocReq)(nil),                 // 27: chatfinbot.share.v1.ShareDocReq
	(*ShareDocRsp)(nil),                 // 28: chatfinbot.share.v1.ShareDocRsp
	(*UnshareDocReq)(nil),               // 29: chatfinbot.share.v1.UnshareDocReq
	(*UnshareDocRsp)(nil),               // 30: chatfinbot.share.v1.UnshareDocRsp
	(*CheckShareChatReq)(nil),           // 31: chatfinbot.share.v1.CheckShareChatReq
	(*CheckShareChatRsp)(nil),           // 32: chatfinbot.share.v1.CheckShareChatRsp
	(*CheckShareDocReq)(nil),            // 33: chatfinbot.share.v1.CheckShareDocReq
	(*CheckShareDocRsp)(nil),            // 34: chatfinbot.share.v1.CheckShareDocRsp
	(*ShareAudioReq)(nil),               // 35: chatfinbot.share.v1.ShareAudioReq
	(*ShareAudioRsp)(nil),               // 36: chatfinbot.share.v1.ShareAudioRsp
	(*UnshareAudioReq)(nil),             // 37: chatfinbot.share.v1.UnshareAudioReq
	(*UnshareAudioRsp)(nil),             // 38: chatfinbot.share.v1.UnshareAudioRsp
	(*CheckAudioReq)(nil),               // 39: chatfinbot.share.v1.CheckAudioReq
	(*CheckAudioRsp)(nil),               // 40: chatfinbot.share.v1.CheckAudioRsp
	(*GetCompanyInfoReq)(nil),           // 41: chatfinbot.share.v1.GetCompanyInfoReq
	(*GetIndicatorsReq)(nil),            // 42: chatfinbot.share.v1.GetIndicatorsReq
	(*GetShareholdersReq)(nil),          // 43: chatfinbot.share.v1.GetShareholdersReq
	(*GetExecutivesReq)(nil),            // 44: chatfinbot.share.v1.GetExecutivesReq
	(*GetStaffInfoReq)(nil),             // 45: chatfinbot.share.v1.GetStaffInfoReq
	(*GetMBRevenueReq)(nil),             // 46: chatfinbot.share.v1.GetMBRevenueReq
	(*GetFinancialReq)(nil),             // 47: chatfinbot.share.v1.GetFinancialReq
	(*GetAccountsReceivableReq)(nil),    // 48: chatfinbot.share.v1.GetAccountsReceivableReq
	(*GetRdExpenditureReq)(nil),         // 49: chatfinbot.share.v1.GetRdExpenditureReq
	(*GetStockReq)(nil),                 // 50: chatfinbot.share.v1.GetStockReq
	(v1.StockType)(0),                   // 51: chatfinbot.search.v1.StockType
	(*v1.GetCompanyInfoRsp)(nil),        // 52: chatfinbot.search.v1.GetCompanyInfoRsp
	(*v1.GetIndicatorsRsp)(nil),         // 53: chatfinbot.search.v1.GetIndicatorsRsp
	(*v1.GetShareholdersRsp)(nil),       // 54: chatfinbot.search.v1.GetShareholdersRsp
	(*v1.GetExecutivesRsp)(nil),         // 55: chatfinbot.search.v1.GetExecutivesRsp
	(*v1.GetStaffInfoRsp)(nil),          // 56: chatfinbot.search.v1.GetStaffInfoRsp
	(*v1.GetMBRevenueRsp)(nil),          // 57: chatfinbot.search.v1.GetMBRevenueRsp
	(*v1.GetFinancialRsp)(nil),          // 58: chatfinbot.search.v1.GetFinancialRsp
	(*v1.GetAccountsReceivableRsp)(nil), // 59: chatfinbot.search.v1.GetAccountsReceivableRsp
	(*v1.GetRdExpenditureRsp)(nil),      // 60: chatfinbot.search.v1.GetRdExpenditureRsp
	(*v1.GetStockRsp)(nil),              // 61: chatfinbot.search.v1.GetStockRsp
}
var file_share_v1_share_proto_depIdxs = []int32{
	2,  // 0: chatfinbot.share.v1.GetChatInfoRsp.list:type_name -> chatfinbot.share.v1.ChatHistory
	3,  // 1: chatfinbot.share.v1.ChatHistory.additional_data:type_name -> chatfinbot.share.v1.ChatHistoryAdditionalData
	4,  // 2: chatfinbot.share.v1.ChatHistoryAdditionalData.documents:type_name -> chatfinbot.share.v1.ChatHistoryDocuments
	2,  // 3: chatfinbot.share.v1.GetDocInfoRsp.list:type_name -> chatfinbot.share.v1.ChatHistory
	8,  // 4: chatfinbot.share.v1.AudioInfo.content:type_name -> chatfinbot.share.v1.MediaContent
	9,  // 5: chatfinbot.share.v1.AudioInfo.partial_summary:type_name -> chatfinbot.share.v1.MediaSummary
	7,  // 6: chatfinbot.share.v1.GetAudioInfoRsp.data:type_name -> chatfinbot.share.v1.AudioInfo
	2,  // 7: chatfinbot.share.v1.GetAudioChatInfoRsp.list:type_name -> chatfinbot.share.v1.ChatHistory
	2,  // 8: chatfinbot.share.v1.GetVideoChatInfoRsp.list:type_name -> chatfinbot.share.v1.ChatHistory
	16, // 9: chatfinbot.share.v1.GetVideoInfoRsp.data:type_name -> chatfinbot.share.v1.VideoInfo
	51, // 10: chatfinbot.share.v1.GetStockReq.stock_type:type_name -> chatfinbot.search.v1.StockType
	23, // 11: chatfinbot.share.v1.ShareService.ShareChat:input_type -> chatfinbot.share.v1.ShareChatReq
	31, // 12: chatfinbot.share.v1.ShareService.CheckShareChat:input_type -> chatfinbot.share.v1.CheckShareChatReq
	25, // 13: chatfinbot.share.v1.ShareService.UnshareChat:input_type -> chatfinbot.share.v1.UnshareChatReq
	0,  // 14: chatfinbot.share.v1.ShareService.GetChatInfo:input_type -> chatfinbot.share.v1.GetChatInfoReq
	27, // 15: chatfinbot.share.v1.ShareService.ShareDoc:input_type -> chatfinbot.share.v1.ShareDocReq
	29, // 16: chatfinbot.share.v1.ShareService.UnshareDoc:input_type -> chatfinbot.share.v1.UnshareDocReq
	5,  // 17: chatfinbot.share.v1.ShareService.GetDocInfo:input_type -> chatfinbot.share.v1.GetDocInfoReq
	33, // 18: chatfinbot.share.v1.ShareService.CheckShareDoc:input_type -> chatfinbot.share.v1.CheckShareDocReq
	10, // 19: chatfinbot.share.v1.ShareService.GetAudioInfo:input_type -> chatfinbot.share.v1.GetAudioInfoReq
	12, // 20: chatfinbot.share.v1.ShareService.GetAudioChatInfo:input_type -> chatfinbot.share.v1.GetAudioChatInfoReq
	35, // 21: chatfinbot.share.v1.ShareService.ShareAudio:input_type -> chatfinbot.share.v1.ShareAudioReq
	37, // 22: chatfinbot.share.v1.ShareService.UnshareAudio:input_type -> chatfinbot.share.v1.UnshareAudioReq
	39, // 23: chatfinbot.share.v1.ShareService.CheckAudio:input_type -> chatfinbot.share.v1.CheckAudioReq
	17, // 24: chatfinbot.share.v1.ShareService.GetVideoInfo:input_type -> chatfinbot.share.v1.GetVideoInfoReq
	41, // 25: chatfinbot.share.v1.ShareService.GetCompanyInfo:input_type -> chatfinbot.share.v1.GetCompanyInfoReq
	42, // 26: chatfinbot.share.v1.ShareService.GetIndicators:input_type -> chatfinbot.share.v1.GetIndicatorsReq
	43, // 27: chatfinbot.share.v1.ShareService.GetShareholders:input_type -> chatfinbot.share.v1.GetShareholdersReq
	44, // 28: chatfinbot.share.v1.ShareService.GetExecutives:input_type -> chatfinbot.share.v1.GetExecutivesReq
	45, // 29: chatfinbot.share.v1.ShareService.GetStaffInfo:input_type -> chatfinbot.share.v1.GetStaffInfoReq
	46, // 30: chatfinbot.share.v1.ShareService.GetMBRevenue:input_type -> chatfinbot.share.v1.GetMBRevenueReq
	47, // 31: chatfinbot.share.v1.ShareService.GetFinancial:input_type -> chatfinbot.share.v1.GetFinancialReq
	48, // 32: chatfinbot.share.v1.ShareService.GetAccountsReceivable:input_type -> chatfinbot.share.v1.GetAccountsReceivableReq
	49, // 33: chatfinbot.share.v1.ShareService.GetRdExpenditure:input_type -> chatfinbot.share.v1.GetRdExpenditureReq
	50, // 34: chatfinbot.share.v1.ShareService.GetStock:input_type -> chatfinbot.share.v1.GetStockReq
	19, // 35: chatfinbot.share.v1.ShareService.ShareVideo:input_type -> chatfinbot.share.v1.ShareVideoReq
	21, // 36: chatfinbot.share.v1.ShareService.UnshareVideo:input_type -> chatfinbot.share.v1.UnshareVideoReq
	14, // 37: chatfinbot.share.v1.ShareService.GetVideoChatInfo:input_type -> chatfinbot.share.v1.GetVideoChatInfoReq
	24, // 38: chatfinbot.share.v1.ShareService.ShareChat:output_type -> chatfinbot.share.v1.ShareChatRsp
	32, // 39: chatfinbot.share.v1.ShareService.CheckShareChat:output_type -> chatfinbot.share.v1.CheckShareChatRsp
	26, // 40: chatfinbot.share.v1.ShareService.UnshareChat:output_type -> chatfinbot.share.v1.UnshareChatRsp
	1,  // 41: chatfinbot.share.v1.ShareService.GetChatInfo:output_type -> chatfinbot.share.v1.GetChatInfoRsp
	28, // 42: chatfinbot.share.v1.ShareService.ShareDoc:output_type -> chatfinbot.share.v1.ShareDocRsp
	30, // 43: chatfinbot.share.v1.ShareService.UnshareDoc:output_type -> chatfinbot.share.v1.UnshareDocRsp
	6,  // 44: chatfinbot.share.v1.ShareService.GetDocInfo:output_type -> chatfinbot.share.v1.GetDocInfoRsp
	34, // 45: chatfinbot.share.v1.ShareService.CheckShareDoc:output_type -> chatfinbot.share.v1.CheckShareDocRsp
	11, // 46: chatfinbot.share.v1.ShareService.GetAudioInfo:output_type -> chatfinbot.share.v1.GetAudioInfoRsp
	13, // 47: chatfinbot.share.v1.ShareService.GetAudioChatInfo:output_type -> chatfinbot.share.v1.GetAudioChatInfoRsp
	36, // 48: chatfinbot.share.v1.ShareService.ShareAudio:output_type -> chatfinbot.share.v1.ShareAudioRsp
	38, // 49: chatfinbot.share.v1.ShareService.UnshareAudio:output_type -> chatfinbot.share.v1.UnshareAudioRsp
	40, // 50: chatfinbot.share.v1.ShareService.CheckAudio:output_type -> chatfinbot.share.v1.CheckAudioRsp
	18, // 51: chatfinbot.share.v1.ShareService.GetVideoInfo:output_type -> chatfinbot.share.v1.GetVideoInfoRsp
	52, // 52: chatfinbot.share.v1.ShareService.GetCompanyInfo:output_type -> chatfinbot.search.v1.GetCompanyInfoRsp
	53, // 53: chatfinbot.share.v1.ShareService.GetIndicators:output_type -> chatfinbot.search.v1.GetIndicatorsRsp
	54, // 54: chatfinbot.share.v1.ShareService.GetShareholders:output_type -> chatfinbot.search.v1.GetShareholdersRsp
	55, // 55: chatfinbot.share.v1.ShareService.GetExecutives:output_type -> chatfinbot.search.v1.GetExecutivesRsp
	56, // 56: chatfinbot.share.v1.ShareService.GetStaffInfo:output_type -> chatfinbot.search.v1.GetStaffInfoRsp
	57, // 57: chatfinbot.share.v1.ShareService.GetMBRevenue:output_type -> chatfinbot.search.v1.GetMBRevenueRsp
	58, // 58: chatfinbot.share.v1.ShareService.GetFinancial:output_type -> chatfinbot.search.v1.GetFinancialRsp
	59, // 59: chatfinbot.share.v1.ShareService.GetAccountsReceivable:output_type -> chatfinbot.search.v1.GetAccountsReceivableRsp
	60, // 60: chatfinbot.share.v1.ShareService.GetRdExpenditure:output_type -> chatfinbot.search.v1.GetRdExpenditureRsp
	61, // 61: chatfinbot.share.v1.ShareService.GetStock:output_type -> chatfinbot.search.v1.GetStockRsp
	20, // 62: chatfinbot.share.v1.ShareService.ShareVideo:output_type -> chatfinbot.share.v1.ShareVideoRsp
	22, // 63: chatfinbot.share.v1.ShareService.UnshareVideo:output_type -> chatfinbot.share.v1.UnshareVideoRsp
	15, // 64: chatfinbot.share.v1.ShareService.GetVideoChatInfo:output_type -> chatfinbot.share.v1.GetVideoChatInfoRsp
	38, // [38:65] is the sub-list for method output_type
	11, // [11:38] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_share_v1_share_proto_init() }
func file_share_v1_share_proto_init() {
	if File_share_v1_share_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_share_v1_share_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetChatInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistoryAdditionalData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChatHistoryDocuments); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetDocInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AudioInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaContent); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MediaSummary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAudioInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAudioInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAudioChatInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAudioChatInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoChatInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoChatInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VideoInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetVideoInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareVideoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareVideoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareVideoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareChatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareChatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDocReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareDocRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareDocReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareDocRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckShareChatReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckShareChatRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckShareDocReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckShareDocRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareAudioReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ShareAudioRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareAudioReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UnshareAudioRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAudioReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CheckAudioRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetCompanyInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetIndicatorsReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetShareholdersReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetExecutivesReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStaffInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetMBRevenueReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetFinancialReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetAccountsReceivableReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetRdExpenditureReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_share_v1_share_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetStockReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_share_v1_share_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   51,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_share_v1_share_proto_goTypes,
		DependencyIndexes: file_share_v1_share_proto_depIdxs,
		MessageInfos:      file_share_v1_share_proto_msgTypes,
	}.Build()
	File_share_v1_share_proto = out.File
	file_share_v1_share_proto_rawDesc = nil
	file_share_v1_share_proto_goTypes = nil
	file_share_v1_share_proto_depIdxs = nil
}
