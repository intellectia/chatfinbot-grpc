// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: news/v1/news.proto

package newspb

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Request message for GetNewsList
type GetNewsListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FirstCategory  string `protobuf:"bytes,1,opt,name=first_category,json=firstCategory,proto3" json:"first_category,omitempty"`    // Primary news category
	SecondCategory string `protobuf:"bytes,2,opt,name=second_category,json=secondCategory,proto3" json:"second_category,omitempty"` // Secondary news category (optional)
	Page           int32  `protobuf:"varint,3,opt,name=page,proto3" json:"page,omitempty"`                                          // Pagination: page number
	PageSize       int32  `protobuf:"varint,4,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`                  // Pagination: number of items per page
	CompanyCode    string `protobuf:"bytes,5,opt,name=company_code,json=companyCode,proto3" json:"company_code,omitempty"`          // Company Code (optional)
}

func (x *GetNewsListReq) Reset() {
	*x = GetNewsListReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_v1_news_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsListReq) ProtoMessage() {}

func (x *GetNewsListReq) ProtoReflect() protoreflect.Message {
	mi := &file_news_v1_news_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsListReq.ProtoReflect.Descriptor instead.
func (*GetNewsListReq) Descriptor() ([]byte, []int) {
	return file_news_v1_news_proto_rawDescGZIP(), []int{0}
}

func (x *GetNewsListReq) GetFirstCategory() string {
	if x != nil {
		return x.FirstCategory
	}
	return ""
}

func (x *GetNewsListReq) GetSecondCategory() string {
	if x != nil {
		return x.SecondCategory
	}
	return ""
}

func (x *GetNewsListReq) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetNewsListReq) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetNewsListReq) GetCompanyCode() string {
	if x != nil {
		return x.CompanyCode
	}
	return ""
}

// Response message for GetNewsList
type GetNewsListRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret      int32          `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`          // Return code (0 for success, non-zero for errors)
	Msg      string         `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`           // Response message or error description
	Articles []*NewsArticle `protobuf:"bytes,3,rep,name=articles,proto3" json:"articles,omitempty"` // List of news articles
}

func (x *GetNewsListRsp) Reset() {
	*x = GetNewsListRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_v1_news_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsListRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsListRsp) ProtoMessage() {}

func (x *GetNewsListRsp) ProtoReflect() protoreflect.Message {
	mi := &file_news_v1_news_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsListRsp.ProtoReflect.Descriptor instead.
func (*GetNewsListRsp) Descriptor() ([]byte, []int) {
	return file_news_v1_news_proto_rawDescGZIP(), []int{1}
}

func (x *GetNewsListRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetNewsListRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetNewsListRsp) GetArticles() []*NewsArticle {
	if x != nil {
		return x.Articles
	}
	return nil
}

// News article information
type NewsArticle struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId         string `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"`                         // Unique identifier for the news article
	Title         string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`                                      // Title of the article
	Summary       string `protobuf:"bytes,3,opt,name=summary,proto3" json:"summary,omitempty"`                                  // Summary of the article
	Url           string `protobuf:"bytes,4,opt,name=url,proto3" json:"url,omitempty"`                                          // URL to the full article
	PublishedDate string `protobuf:"bytes,5,opt,name=published_date,json=publishedDate,proto3" json:"published_date,omitempty"` // Publication date
	AuthorInfo    string `protobuf:"bytes,6,opt,name=author_info,json=authorInfo,proto3" json:"author_info,omitempty"`          // Author information
	CompanyInfo   string `protobuf:"bytes,7,opt,name=company_info,json=companyInfo,proto3" json:"company_info,omitempty"`       // Company
	FileType      string `protobuf:"bytes,8,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"`                // File type
	CategoryInfo  string `protobuf:"bytes,9,opt,name=category_info,json=categoryInfo,proto3" json:"category_info,omitempty"`    // Category information
	Images        string `protobuf:"bytes,10,opt,name=images,proto3" json:"images,omitempty"`                                   // Images
	Keywords      string `protobuf:"bytes,11,opt,name=keywords,proto3" json:"keywords,omitempty"`                               // Keywords
	Region        string `protobuf:"bytes,12,opt,name=region,proto3" json:"region,omitempty"`                                   // Region
	FullText      string `protobuf:"bytes,13,opt,name=full_text,json=fullText,proto3" json:"full_text,omitempty"`               // Full text
	Videos        string `protobuf:"bytes,14,opt,name=videos,proto3" json:"videos,omitempty"`                                   // Videos
	Audios        string `protobuf:"bytes,15,opt,name=audios,proto3" json:"audios,omitempty"`                                   // audios
}

func (x *NewsArticle) Reset() {
	*x = NewsArticle{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_v1_news_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *NewsArticle) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*NewsArticle) ProtoMessage() {}

func (x *NewsArticle) ProtoReflect() protoreflect.Message {
	mi := &file_news_v1_news_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use NewsArticle.ProtoReflect.Descriptor instead.
func (*NewsArticle) Descriptor() ([]byte, []int) {
	return file_news_v1_news_proto_rawDescGZIP(), []int{2}
}

func (x *NewsArticle) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

func (x *NewsArticle) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *NewsArticle) GetSummary() string {
	if x != nil {
		return x.Summary
	}
	return ""
}

func (x *NewsArticle) GetUrl() string {
	if x != nil {
		return x.Url
	}
	return ""
}

func (x *NewsArticle) GetPublishedDate() string {
	if x != nil {
		return x.PublishedDate
	}
	return ""
}

func (x *NewsArticle) GetAuthorInfo() string {
	if x != nil {
		return x.AuthorInfo
	}
	return ""
}

func (x *NewsArticle) GetCompanyInfo() string {
	if x != nil {
		return x.CompanyInfo
	}
	return ""
}

func (x *NewsArticle) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *NewsArticle) GetCategoryInfo() string {
	if x != nil {
		return x.CategoryInfo
	}
	return ""
}

func (x *NewsArticle) GetImages() string {
	if x != nil {
		return x.Images
	}
	return ""
}

func (x *NewsArticle) GetKeywords() string {
	if x != nil {
		return x.Keywords
	}
	return ""
}

func (x *NewsArticle) GetRegion() string {
	if x != nil {
		return x.Region
	}
	return ""
}

func (x *NewsArticle) GetFullText() string {
	if x != nil {
		return x.FullText
	}
	return ""
}

func (x *NewsArticle) GetVideos() string {
	if x != nil {
		return x.Videos
	}
	return ""
}

func (x *NewsArticle) GetAudios() string {
	if x != nil {
		return x.Audios
	}
	return ""
}

// Request message for GetNewsInfo
type GetNewsInfoReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId string `protobuf:"bytes,1,opt,name=doc_id,json=docId,proto3" json:"doc_id,omitempty"` // Unique identifier for the news article
}

func (x *GetNewsInfoReq) Reset() {
	*x = GetNewsInfoReq{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_v1_news_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsInfoReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsInfoReq) ProtoMessage() {}

func (x *GetNewsInfoReq) ProtoReflect() protoreflect.Message {
	mi := &file_news_v1_news_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsInfoReq.ProtoReflect.Descriptor instead.
func (*GetNewsInfoReq) Descriptor() ([]byte, []int) {
	return file_news_v1_news_proto_rawDescGZIP(), []int{3}
}

func (x *GetNewsInfoReq) GetDocId() string {
	if x != nil {
		return x.DocId
	}
	return ""
}

// Response message for GetNewsInfo
type GetNewsInfoRsp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Ret     int32        `protobuf:"varint,1,opt,name=ret,proto3" json:"ret,omitempty"`        // Return code (0 for success, non-zero for errors)
	Msg     string       `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`         // Response message or error description
	Article *NewsArticle `protobuf:"bytes,3,opt,name=article,proto3" json:"article,omitempty"` // Detailed information about the news article
}

func (x *GetNewsInfoRsp) Reset() {
	*x = GetNewsInfoRsp{}
	if protoimpl.UnsafeEnabled {
		mi := &file_news_v1_news_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetNewsInfoRsp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsInfoRsp) ProtoMessage() {}

func (x *GetNewsInfoRsp) ProtoReflect() protoreflect.Message {
	mi := &file_news_v1_news_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsInfoRsp.ProtoReflect.Descriptor instead.
func (*GetNewsInfoRsp) Descriptor() ([]byte, []int) {
	return file_news_v1_news_proto_rawDescGZIP(), []int{4}
}

func (x *GetNewsInfoRsp) GetRet() int32 {
	if x != nil {
		return x.Ret
	}
	return 0
}

func (x *GetNewsInfoRsp) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

func (x *GetNewsInfoRsp) GetArticle() *NewsArticle {
	if x != nil {
		return x.Article
	}
	return nil
}

var File_news_v1_news_proto protoreflect.FileDescriptor

var file_news_v1_news_proto_rawDesc = []byte{
	0x0a, 0x12, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x12, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74,
	0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0xb4, 0x01, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65,
	0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x12, 0x25, 0x0a, 0x0e, 0x66, 0x69, 0x72,
	0x73, 0x74, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x66, 0x69, 0x72, 0x73, 0x74, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x27, 0x0a, 0x0f, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x65, 0x63, 0x6f, 0x6e,
	0x64, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1b, 0x0a,
	0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f,
	0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x71, 0x0a,
	0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70, 0x12,
	0x10, 0x0a, 0x03, 0x72, 0x65, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x6d, 0x73, 0x67, 0x12, 0x3b, 0x0a, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62,
	0x6f, 0x74, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41,
	0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x52, 0x08, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x73,
	0x22, 0xac, 0x03, 0x0a, 0x0b, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a,
	0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x75, 0x62,
	0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x5f, 0x64, 0x61, 0x74, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x64, 0x44, 0x61, 0x74, 0x65,
	0x12, 0x1f, 0x0a, 0x0b, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79, 0x5f, 0x69, 0x6e, 0x66,
	0x6f, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x63, 0x6f, 0x6d, 0x70, 0x61, 0x6e, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x69, 0x6c, 0x65, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69, 0x6e,
	0x66, 0x6f, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x73, 0x12, 0x1a,
	0x0a, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6b, 0x65, 0x79, 0x77, 0x6f, 0x72, 0x64, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x65,
	0x67, 0x69, 0x6f, 0x6e, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x72, 0x65, 0x67, 0x69,
	0x6f, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x66, 0x75, 0x6c, 0x6c, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x18,
	0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x66, 0x75, 0x6c, 0x6c, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x16, 0x0a, 0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x06, 0x76, 0x69, 0x64, 0x65, 0x6f, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f,
	0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x61, 0x75, 0x64, 0x69, 0x6f, 0x73, 0x22,
	0x27, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x12, 0x15, 0x0a, 0x06, 0x64, 0x6f, 0x63, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x64, 0x6f, 0x63, 0x49, 0x64, 0x22, 0x6f, 0x0a, 0x0e, 0x47, 0x65, 0x74, 0x4e,
	0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x12, 0x10, 0x0a, 0x03, 0x72, 0x65,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x03, 0x72, 0x65, 0x74, 0x12, 0x10, 0x0a, 0x03,
	0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6d, 0x73, 0x67, 0x12, 0x39,
	0x0a, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x1f, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x65, 0x77,
	0x73, 0x2e, 0x76, 0x31, 0x2e, 0x4e, 0x65, 0x77, 0x73, 0x41, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65,
	0x52, 0x07, 0x61, 0x72, 0x74, 0x69, 0x63, 0x6c, 0x65, 0x32, 0xf9, 0x01, 0x0a, 0x0b, 0x4e, 0x65,
	0x77, 0x73, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x74, 0x0a, 0x0b, 0x47, 0x65, 0x74,
	0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66,
	0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65,
	0x74, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63,
	0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76,
	0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x73, 0x70,
	0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15, 0x2f, 0x67, 0x61, 0x74, 0x65, 0x77,
	0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73, 0x2f, 0x6c, 0x69, 0x73, 0x74, 0x12,
	0x74, 0x0a, 0x0b, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e, 0x6e, 0x65, 0x77, 0x73,
	0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x1a, 0x22, 0x2e, 0x63, 0x68, 0x61, 0x74, 0x66, 0x69, 0x6e, 0x62, 0x6f, 0x74, 0x2e,
	0x6e, 0x65, 0x77, 0x73, 0x2e, 0x76, 0x31, 0x2e, 0x47, 0x65, 0x74, 0x4e, 0x65, 0x77, 0x73, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x73, 0x70, 0x22, 0x1d, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x17, 0x12, 0x15,
	0x2f, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2f, 0x76, 0x31, 0x2f, 0x6e, 0x65, 0x77, 0x73,
	0x2f, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x0a, 0x5a, 0x08, 0x2e, 0x3b, 0x6e, 0x65, 0x77, 0x73, 0x70,
	0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_news_v1_news_proto_rawDescOnce sync.Once
	file_news_v1_news_proto_rawDescData = file_news_v1_news_proto_rawDesc
)

func file_news_v1_news_proto_rawDescGZIP() []byte {
	file_news_v1_news_proto_rawDescOnce.Do(func() {
		file_news_v1_news_proto_rawDescData = protoimpl.X.CompressGZIP(file_news_v1_news_proto_rawDescData)
	})
	return file_news_v1_news_proto_rawDescData
}

var file_news_v1_news_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_news_v1_news_proto_goTypes = []interface{}{
	(*GetNewsListReq)(nil), // 0: chatfinbot.news.v1.GetNewsListReq
	(*GetNewsListRsp)(nil), // 1: chatfinbot.news.v1.GetNewsListRsp
	(*NewsArticle)(nil),    // 2: chatfinbot.news.v1.NewsArticle
	(*GetNewsInfoReq)(nil), // 3: chatfinbot.news.v1.GetNewsInfoReq
	(*GetNewsInfoRsp)(nil), // 4: chatfinbot.news.v1.GetNewsInfoRsp
}
var file_news_v1_news_proto_depIdxs = []int32{
	2, // 0: chatfinbot.news.v1.GetNewsListRsp.articles:type_name -> chatfinbot.news.v1.NewsArticle
	2, // 1: chatfinbot.news.v1.GetNewsInfoRsp.article:type_name -> chatfinbot.news.v1.NewsArticle
	0, // 2: chatfinbot.news.v1.NewsService.GetNewsList:input_type -> chatfinbot.news.v1.GetNewsListReq
	3, // 3: chatfinbot.news.v1.NewsService.GetNewsInfo:input_type -> chatfinbot.news.v1.GetNewsInfoReq
	1, // 4: chatfinbot.news.v1.NewsService.GetNewsList:output_type -> chatfinbot.news.v1.GetNewsListRsp
	4, // 5: chatfinbot.news.v1.NewsService.GetNewsInfo:output_type -> chatfinbot.news.v1.GetNewsInfoRsp
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_news_v1_news_proto_init() }
func file_news_v1_news_proto_init() {
	if File_news_v1_news_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_news_v1_news_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsListReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_v1_news_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsListRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_v1_news_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*NewsArticle); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_v1_news_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsInfoReq); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_news_v1_news_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetNewsInfoRsp); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_news_v1_news_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_news_v1_news_proto_goTypes,
		DependencyIndexes: file_news_v1_news_proto_depIdxs,
		MessageInfos:      file_news_v1_news_proto_msgTypes,
	}.Build()
	File_news_v1_news_proto = out.File
	file_news_v1_news_proto_rawDesc = nil
	file_news_v1_news_proto_goTypes = nil
	file_news_v1_news_proto_depIdxs = nil
}
